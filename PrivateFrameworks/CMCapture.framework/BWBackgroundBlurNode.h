/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface BWBackgroundBlurNode : BWNode {
    BWStats * _backgroundBlurProcessingTimeStats;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _bufferServicingLock;
    NSString * _clientApplicationID;
    bool  _effectBypassed;
    long long  _effectQuality;
    bool  _fastSwitchEnabled;
    BWLimitedGMErrorLogger * _limitedGMErrorLogger;
    int  _maxLossyCompressionLevel;
    int  _maxThermalSystemPressurelLevel;
    int  _numberOfFramesThatCouldNotBeBlurred;
    struct opaqueCMFormatDescription { } * _outputFormatDescription;
    bool  _previousEffectBypassed;
    PTEffect * _ptEffect;
    unsigned int  _stillCaptureEnqueueIndex;
    struct { 
        struct __CVBuffer {} *pixelBuffer; 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } pts; 
    }  _stillCaptureQueue;
    bool  _stillImageCaptureEnabled;
    BWNodeInput * _stillImageInput;
    BWNodeOutput * _stillImageOutput;
    struct OpaqueVTPixelTransferSession { } * _stillImagePixelTransferSession;
    BWNodeInput * _videoInput;
    BWNodeOutput * _videoOutput;
}

@property (nonatomic, copy) NSString *clientApplicationID;
@property (nonatomic) bool effectBypassed;
@property (nonatomic, readonly) BWNodeInput *stillImageInput;
@property (nonatomic, readonly) BWNodeOutput *stillImageOutput;
@property (nonatomic, readonly) BWNodeInput *videoInput;
@property (nonatomic, readonly) BWNodeOutput *videoOutput;

+ (void)initialize;

- (struct __CVBuffer { }*)_createMatchingPixelBufferFromSavedVideoBuffersWithTargetPts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct __CVBuffer { }*)_newStillImageOutputPixelBufferFromVideoPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)_reportBackgroundBlurCoreAnalyticsData;
- (void)_savePixelBufferForStillImageCaptureRequests:(struct __CVBuffer { }*)arg1 withPts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)_supportedInputPixelFormats;
- (id)_supportedOutputPixelFormats;
- (void)_updateOutputRequirements;
- (id)clientApplicationID;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (void)dealloc;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2;
- (bool)effectBypassed;
- (id)initWithStillImageCaptureEnabled:(bool)arg1 maxLossyCompressionLevel:(int)arg2 fastSwitchEnabled:(bool)arg3;
- (id)nodeSubType;
- (id)nodeType;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (void)setClientApplicationID:(id)arg1;
- (void)setEffectBypassed:(bool)arg1;
- (id)stillImageInput;
- (id)stillImageOutput;
- (id)videoInput;
- (id)videoOutput;

@end
