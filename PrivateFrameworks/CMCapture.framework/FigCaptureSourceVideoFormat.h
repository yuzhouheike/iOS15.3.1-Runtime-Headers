/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface FigCaptureSourceVideoFormat : FigCaptureSourceFormat {
    FigCaptureSourceVideoFormat * _cinematicFramingFormat;
    FigCaptureSourceCompanionFormat * _depthCompanionFormat;
    NSArray * _frontEndScalerCompanionFormats;
    FigCaptureSourceCompanionFormat * _fullBinSIFRCompanionFormat;
    FigCaptureSourceVideoFormat * _geometricDistortionCorrectionFormat;
    bool  _isStillImageDepthSupported;
    bool  _isStillImageDisparitySupported;
    bool  _isStreamingDepthSupported;
    bool  _isStreamingDisparitySupported;
    FigCaptureSourceCompanionFormat * _nonSIFRCompanionFormat;
    NSArray * _supportedDepthDataFormats;
}

@property (readonly) NSArray *AVCaptureSessionPresets;
@property (getter=isSIFRSupported, readonly) bool SIFRSupported;
@property (readonly) int autoFocusSystem;
@property (getter=isBackgroundBlurSupported, readonly) bool backgroundBlurSupported;
@property (readonly) int baseSensorPowerConsumption;
@property (getter=isBinned, readonly) bool binned;
@property (getter=isCameraCalibrationDataDeliverySupported, readonly) bool cameraCalibrationDataDeliverySupported;
@property (readonly) FigCaptureSourceVideoFormat *cinematicFramingFormat;
@property (getter=isCinematicFramingSupported, readonly) bool cinematicFramingSupported;
@property (readonly) float cinematicStabilizationExtendedLookAheadDuration;
@property (getter=isCinematicVideoSupported, readonly) bool cinematicVideoSupported;
@property (readonly) bool configureForDigitalFlashSupport;
@property (readonly) bool configureForSpatialOverCaptureSupport;
@property (readonly) bool configureForStillImageStabilizationSupport;
@property (getter=isDeepFusionSupported, readonly) bool deepFusionSupported;
@property (readonly) float defaultPortraitLightingEffectStrength;
@property (readonly) float defaultSimulatedAperture;
@property (getter=isDeferredPhotoProcessingSupported, readonly) bool deferredPhotoProcessingSupported;
@property (readonly) NSArray *digitalFlashDetectedObjectTypes;
@property (getter=isDigitalFlashSupported, readonly) bool digitalFlashSupported;
@property (readonly) struct { int x1; int x2; } dimensions;
@property (readonly) bool distortionCompensationSupported;
@property (readonly) float fieldOfView;
@property (readonly) int formatIndex;
@property (readonly) float geometricDistortionCorrectedFieldOfView;
@property (readonly) struct { int x1; int x2; } geometricDistortionCorrectedNativeDimensions;
@property (readonly) FigCaptureSourceVideoFormat *geometricDistortionCorrectionFormat;
@property (getter=isGlobalToneMappingSupported, readonly) bool globalToneMappingSupported;
@property (getter=isGNRHDRSupported, readonly) bool gnrHDRSupported;
@property (readonly) float hardwareCost;
@property (readonly) bool hasSensorHDRCompanionIndex;
@property (getter=isHDROriginalImageDeliverySupported, readonly) bool hdrOriginalImageDeliverySupported;
@property (getter=isHDRSupported, readonly) bool hdrSupported;
@property (getter=isHighPhotoQualitySupported, readonly) bool highPhotoQualitySupported;
@property (getter=isHighProfileH264Supported, readonly) bool highProfileH264Supported;
@property (getter=isHighResPhotoFormat, readonly) bool highResPhotoFormat;
@property (readonly) struct { int x1; int x2; } highResStillImageDimensions;
@property (getter=isHighResStillImageSupported, readonly) bool highResStillImageSupported;
@property (nonatomic, readonly) bool intelligentDistortionCorrectionSupported;
@property (readonly) unsigned int internalDemosaicedRawPixelFormat;
@property (getter=isIrisSupported, readonly) bool irisSupported;
@property (getter=isIrisVideoStabilizationSupported, readonly) bool irisVideoStabilizationSupported;
@property (readonly) bool is10bitVideoFormat;
@property (readonly) bool is422VideoFormat;
@property (getter=isISPMultiBandNoiseReductionSupported, readonly) bool ispMultiBandNoiseReductionSupported;
@property (readonly) int ispPowerConsumption;
@property (getter=isLearnedNRSupported, readonly) bool learnedNRSupported;
@property (getter=isLowLightVideoCaptureSupported, readonly) bool lowLightVideoCaptureSupported;
@property (readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } maxExposureDuration;
@property (readonly) float maxISO;
@property (readonly) float maxPortraitLightingEffectStrength;
@property (readonly) float maxSimulatedAperture;
@property (readonly) float maxSupportedFrameRate;
@property (readonly) float maxZoomFactor;
@property (readonly) float maxZoomFactorForDepthDataDelivery;
@property (readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } minExposureDuration;
@property (readonly) float minISO;
@property (readonly) float minPortraitLightingEffectStrength;
@property (readonly) float minSimulatedAperture;
@property (readonly) float minSupportedFrameRate;
@property (readonly) float minZoomFactorForDepthDataDelivery;
@property (getter=isMomentCaptureMovieRecordingSupported, readonly) bool momentCaptureMovieRecordingSupported;
@property (getter=isMultiCamSupported, readonly) bool multiCamSupported;
@property (getter=isNonDestructiveCropSupported, readonly) bool nonDestructiveCropSupported;
@property (getter=isPhotoFormat, readonly) bool photoFormat;
@property (readonly) bool prefersSensorHDREnabled;
@property (readonly) struct { int x1; int x2; } previewDimensions;
@property (getter=isQuadraHighResStillImageSupported, readonly) bool quadraHighResStillImageSupported;
@property (readonly) int rawBitDepth;
@property (getter=isRedEyeReductionSupported, readonly) bool redEyeReductionSupported;
@property (getter=isResponsiveShutterSupported, readonly) bool responsiveShutterSupported;
@property (getter=isSecondaryScalerUnavailable, readonly) bool secondaryScalerUnavailable;
@property (getter=isSemanticStyleRenderingSupported, readonly) bool semanticStyleRenderingSupported;
@property (readonly) struct { int x1; int x2; } sensorDimensions;
@property (getter=isSIFRStillImageCaptureWithDepthDataDisabled, readonly) bool sifrStillImageCaptureWithDepthDataDisabled;
@property (readonly) float spatialOverCapturePercentage;
@property (getter=isSpatialOverCaptureSupported, readonly) bool spatialOverCaptureSupported;
@property (readonly) float stabilizationOverscanPercentageOverrideForCinematic;
@property (readonly) float stabilizationOverscanPercentageOverrideForStandard;
@property (readonly) int stabilizationTypeForTimelapse;
@property (readonly) int stabilizationTypeOverrideForCinematic;
@property (readonly) int stabilizationTypeOverrideForStandard;
@property (getter=isStagePreviewRenderingSupported, readonly) bool stagePreviewRenderingSupported;
@property (getter=isStereoFusionSupported, readonly) bool stereoFusionSupported;
@property (getter=isStillImageDepthSupported, readonly) bool stillImageDepthSupported;
@property (getter=isStillImageDisparitySupported, readonly) bool stillImageDisparitySupported;
@property (readonly) struct { int x1; int x2; } stillImageGDCInDCProcessorOutputCropDimensions;
@property (getter=isStillImageISPMultiBandNoiseReductionSupported, readonly) bool stillImageISPMultiBandNoiseReductionSupported;
@property (getter=isStillImageStabilizationSupported, readonly) bool stillImageStabilizationSupported;
@property (getter=isStreamingDepthSupported, readonly) bool streamingDepthSupported;
@property (getter=isStreamingDisparitySupported, readonly) bool streamingDisparitySupported;
@property (getter=isStudioAndContourPreviewRenderingSupported, readonly) bool studioAndContourPreviewRenderingSupported;
@property (getter=isSupplementalTimeOfFlightCameraSupported, readonly) bool supplementalTimeOfFlightCameraSupported;
@property (readonly) NSArray *supportedColorSpaces;
@property (readonly) unsigned int supportedDemosaicedRawPixelFormat;
@property (readonly) NSArray *supportedDepthDataFormats;
@property (readonly) unsigned int supportedRawPixelFormat;
@property (getter=isVariableFrameRateVideoCaptureSupported, readonly) bool variableFrameRateVideoCaptureSupported;
@property (readonly) int variableSensorPowerConsumption;
@property (getter=isVideoHDRFusionSupported, readonly) bool videoHDRFusionSupported;
@property (getter=isVideoSTFMetadataEnabled, readonly) bool videoSTFMetadataEnabled;
@property (getter=isVideoSTFSupported, readonly) bool videoSTFSupported;
@property (getter=isVisionDataDeliverySupported, readonly) bool visionDataDeliverySupported;
@property (getter=isWideAsStatsMasterEnabled, readonly) bool wideAsStatsMasterEnabled;
@property (getter=isWideColorSupported, readonly) bool wideColorSupported;
@property (readonly) bool zeroShutterLagRequiresUserInitiatedCaptureRequestTime;
@property (getter=isZeroShutterLagSupported, readonly) bool zeroShutterLagSupported;
@property (getter=isZoomDynamicSensorCropSupported, readonly) bool zoomDynamicSensorCropSupported;
@property (readonly) float zoomFactorUpscaleThreshold;
@property (getter=isZoomSupported, readonly) bool zoomSupported;

+ (void)initialize;
+ (bool)supportsSecureCoding;

- (id)AVCaptureSessionPresets;
- (float)aeMaxGain;
- (int)autoFocusSystem;
- (int)baseSensorPowerConsumption;
- (bool)capturesStillsFromVideoStream;
- (id)cinematicFramingFormat;
- (struct { int x1; int x2; })cinematicFramingOutputDimensions;
- (float)cinematicStabilizationExtendedLookAheadDuration;
- (bool)configureForDigitalFlashSupport;
- (int)configureForGreenGhostMitigationVersion;
- (bool)configureForSpatialOverCaptureSupport;
- (bool)configureForStillImageStabilizationSupport;
- (id)copyWithNewPixelFormat:(unsigned int)arg1;
- (struct { int x1; int x2; })cropDimensionsForFES;
- (int)dcProcessorVersion;
- (void)dealloc;
- (int)deepZoomVersion;
- (float)defaultMaxFrameRateForSessionPreset:(id)arg1;
- (float)defaultMinFrameRateForSessionPreset:(id)arg1;
- (float)defaultPortraitLightingEffectStrength;
- (float)defaultSimulatedAperture;
- (id)depthCompanionFormat;
- (float)depthDataAEMaxGain;
- (float)depthDataMaxIntegrationTimeOverride;
- (id)digitalFlashDetectedObjectTypes;
- (struct { int x1; int x2; })dimensions;
- (bool)distortionCompensationSupported;
- (int)fesBinningFactorHorizontal;
- (struct { int x1; int x2; })fesInputCropDimensions;
- (float)fieldOfView;
- (struct opaqueCMFormatDescription { }*)formatDescription;
- (int)formatIndex;
- (id)frontEndScalerCompanionFormats;
- (id)fullBinSIFRCompanionFormat;
- (float)geometricDistortionCorrectedFieldOfView;
- (struct { int x1; int x2; })geometricDistortionCorrectedNativeDimensions;
- (id)geometricDistortionCorrectionFormat;
- (int)greenGhostMitigationVersion;
- (float)hardwareCost;
- (bool)hasSensorHDRCompanionIndex;
- (struct { int x1; int x2; })highResStillImageDimensions;
- (int)horizontalSensorBinningFactor;
- (id)initWithCoder:(id)arg1;
- (id)initWithFigCaptureStreamFormatDictionary:(id)arg1;
- (id)initWithXPCEncoding:(id)arg1;
- (bool)intelligentDistortionCorrectionSupported;
- (unsigned int)internalDemosaicedRawPixelFormat;
- (bool)is10bitVideoFormat;
- (bool)is422VideoFormat;
- (bool)isBackgroundBlurSupported;
- (bool)isBinned;
- (bool)isCameraCalibrationDataDeliverySupported;
- (bool)isCaptureTimePhotoCurationSupported;
- (bool)isCinematicFramingSupported;
- (bool)isCinematicVideoSupported;
- (bool)isCompatibleWithInfraredFormat:(id)arg1;
- (bool)isContentAwareAWBSupported;
- (bool)isContentAwareEnhancementSupported;
- (bool)isDeepFusionSupported;
- (bool)isDeferredPhotoProcessingSupported;
- (bool)isDigitalFlashSupported;
- (bool)isGNRHDRSupported;
- (bool)isGainMapSupported;
- (bool)isGlobalToneMappingSupported;
- (bool)isHDROriginalImageDeliverySupported;
- (bool)isHDRSupported;
- (bool)isHighPhotoQualitySupported;
- (bool)isHighProfileH264Supported;
- (bool)isHighResPhotoFormat;
- (bool)isHighResStillImageSupported;
- (bool)isISPMultiBandNoiseReductionSupported;
- (bool)isIrisSupported;
- (bool)isIrisVideoStabilizationSupported;
- (bool)isLearnedNRSupported;
- (bool)isLowLightVideoCaptureSupported;
- (bool)isMomentCaptureMovieRecordingSupported;
- (bool)isMultiCamSupported;
- (bool)isNonDestructiveCropSupported;
- (bool)isPhotoFormat;
- (bool)isQuadraHighResStillImageSupported;
- (bool)isRedEyeReductionSupported;
- (bool)isResponsiveShutterSupported;
- (bool)isSIFRStillImageCaptureWithDepthDataDisabled;
- (bool)isSIFRSupported;
- (bool)isSecondaryScalerUnavailable;
- (bool)isSemanticStyleRenderingSupported;
- (bool)isSpatialOverCaptureSupported;
- (bool)isStabilizationModeSupported:(int)arg1;
- (bool)isStagePreviewRenderingSupported;
- (bool)isStereoFusionSupported;
- (bool)isStillImageDepthSupported;
- (bool)isStillImageDisparitySupported;
- (bool)isStillImageISPChromaNoiseReductionEnabled;
- (bool)isStillImageISPMultiBandNoiseReductionSupported;
- (bool)isStillImageStabilizationSupported;
- (bool)isStreamingDepthSupported;
- (bool)isStreamingDisparitySupported;
- (bool)isStudioAndContourPreviewRenderingSupported;
- (bool)isSupplementalTimeOfFlightCameraSupported;
- (bool)isValidDerivedSourceFormatForUnderlyingFormat:(id)arg1;
- (bool)isVariableFrameRateVideoCaptureSupported;
- (bool)isVideoHDRFusionSupported;
- (bool)isVideoSTFMetadataEnabled;
- (bool)isVideoSTFSupported;
- (bool)isVisionDataDeliverySupported;
- (bool)isWideAsStatsMasterEnabled;
- (bool)isWideColorSupported;
- (bool)isWideDigitalFlashAvailableShallowDepthOfFieldEffectsEnabled;
- (bool)isZeroShutterLagSupported;
- (bool)isZoomDynamicSensorCropSupported;
- (bool)isZoomSupported;
- (bool)ispChromaNoiseReductionEnabled;
- (int)ispPowerConsumption;
- (float)lowLightVideoAEMaxGain;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxExposureDuration;
- (float)maxISO;
- (int)maxIntegrationTimeOverride;
- (float)maxPortraitLightingEffectStrength;
- (float)maxSimulatedAperture;
- (float)maxSupportedFrameRate;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })maxVisibleSensorRect;
- (float)maxZoomFactor;
- (float)maxZoomFactorForDepthDataDelivery;
- (unsigned int)mediaType;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })minExposureDuration;
- (float)minISO;
- (float)minPortraitLightingEffectStrength;
- (float)minSimulatedAperture;
- (float)minSupportedFrameRate;
- (float)minZoomFactorForDepthDataDelivery;
- (struct { int x1; int x2; })nativeDimensions;
- (id)nonSIFRCompanionFormat;
- (struct { int x1; int x2; })postGDCCropDimensions;
- (struct { int x1; int x2; })preGDCSensorCropDimensions;
- (bool)prefersSensorHDREnabled;
- (struct { int x1; int x2; })previewDimensions;
- (int)previewImageQueueSyncStrategy;
- (int)rawBitDepth;
- (id)rawLensShadingCorrection;
- (int)redEyeReductionVersion;
- (int)semanticDevelopmentVersion;
- (int)semanticRenderingVersion;
- (struct { int x1; int x2; })sensorCropDimensions;
- (struct { int x1; int x2; })sensorDimensions;
- (int)sensorHDRCompanionIndex;
- (struct { int x1; int x2; })sourceCropAspectRatio;
- (float)spatialOverCapturePercentage;
- (struct CGSize { double x1; double x2; })stabilizationOverscanFromSensorForFESCropDimensions:(struct { int x1; int x2; })arg1 preferSIFRFormat:(bool)arg2 geometricDistortionCorrection:(bool)arg3 useFESCompanionIndex:(bool)arg4;
- (float)stabilizationOverscanPercentageOverrideForCinematic;
- (float)stabilizationOverscanPercentageOverrideForStandard;
- (int)stabilizationTypeForTimelapse;
- (int)stabilizationTypeOverrideForCinematic;
- (int)stabilizationTypeOverrideForStandard;
- (struct { int x1; int x2; })stillImageGDCInDCProcessorOutputCropDimensions;
- (bool)stillImageGeometricDistortionCorrectionInDCProcessorSupported;
- (int)stillImageNoiseReductionAndStabilizationScheme;
- (id)supportedColorSpaces;
- (unsigned int)supportedDemosaicedRawPixelFormat;
- (id)supportedDepthDataFormats;
- (unsigned int)supportedRawPixelFormat;
- (bool)sushiRawBlackBorderingEnabled;
- (bool)sushiRawSupported;
- (bool)temporalNoiseReductionBand0Disabled;
- (int)temporalNoiseReductionMode;
- (bool)temporalNoiseReductionRawEnabled;
- (bool)usesPacked10BitFirmwareStillImageOutputPixelFormat;
- (int)variableSensorPowerConsumption;
- (int)verticalSensorBinningFactor;
- (bool)zeroShutterLagRequiresUserInitiatedCaptureRequestTime;
- (float)zoomFactorUpscaleThreshold;

@end
