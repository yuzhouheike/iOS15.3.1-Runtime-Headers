/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRAVOutputDevice : NSObject {
    NSData * _MACAddress;
    NSString * _airPlayGroupID;
    bool  _airPlayReceiverSessionActive;
    bool  _allowsHeadTrackedSpatialAudio;
    NSArray * _availableBluetoothListeningModes;
    float  _batteryLevel;
    NSString * _bluetoothID;
    bool  _canAccessAppleMusic;
    bool  _canAccessRemoteAssets;
    bool  _canAccessiCloudMusicLibrary;
    bool  _canFetchMediaDataFromSender;
    bool  _canPlayEncryptedProgressiveDownloadAssets;
    bool  _canRelayCommunicationChannel;
    NSArray * _clusterComposition;
    unsigned long long  _configuredClusterSize;
    NSString * _currentBluetoothListeningMode;
    _MRAVOutputDeviceDescriptorProtobuf * _descriptor;
    bool  _deviceGroupable;
    unsigned int  _deviceSubtype;
    unsigned int  _deviceType;
    MRAVEndpoint * _endpoint;
    NSString * _firmwareVersion;
    bool  _groupContainsGroupLeader;
    bool  _groupLeader;
    bool  _groupable;
    bool  _hasBatteryLevel;
    bool  _headTrackedSpatialAudioActive;
    NSString * _headTrackedSpatialAudioMode;
    long long  _hostDeviceClass;
    bool  _isAddedToHomeKit;
    bool  _localDevice;
    NSString * _logicalDeviceID;
    NSString * _modelID;
    NSDictionary * _modelSpecificInfo;
    NSString * _name;
    bool  _parentGroupContainsDiscoverableLeader;
    NSString * _parentGroupIdentifier;
    bool  _pickedOnPairedDevice;
    NSString * _playingPairedDeviceName;
    bool  _presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
    NSString * _primaryID;
    bool  _producesLowFidelityAudio;
    bool  _proxyGroupPlayer;
    bool  _remoteControllable;
    bool  _requiresAuthorization;
    MRAVOutputDeviceSourceInfo * _sourceInfo;
    bool  _supportsBluetoothSharing;
    bool  _supportsBufferedAirPlay;
    bool  _supportsExternalScreen;
    bool  _supportsHAP;
    bool  _supportsHeadTrackedSpatialAudio;
    bool  _supportsMultiplayer;
    bool  _supportsRapport;
    bool  _supportsRapportRemoteControlTransport;
    bool  _supportsSharePlayHandoff;
    NSString * _uid;
    float  _volume;
    bool  _volumeControlAvailable;
}

@property (nonatomic, readonly) NSData *MACAddress;
@property (nonatomic, copy) NSString *airPlayGroupID;
@property (getter=isAirPlayReceiverSessionActive, nonatomic, readonly) bool airPlayReceiverSessionActive;
@property (nonatomic, readonly) bool allowsHeadTrackedSpatialAudio;
@property (getter=isAuxiliary, nonatomic, readonly) bool auxiliary;
@property (nonatomic, readonly) NSArray *availableBluetoothListeningModes;
@property (nonatomic, readonly) NSString *baseGroupID;
@property (nonatomic, readonly) float batteryLevel;
@property (nonatomic, readonly) NSString *bluetoothID;
@property (nonatomic, readonly) bool canAccessAppleMusic;
@property (nonatomic, readonly) bool canAccessRemoteAssets;
@property (nonatomic, readonly) bool canAccessiCloudMusicLibrary;
@property (nonatomic, readonly) bool canFetchMediaDataFromSender;
@property (nonatomic, readonly) bool canPlayEncryptedProgressiveDownloadAssets;
@property (nonatomic, readonly) bool canProxyEndpoint;
@property (nonatomic, readonly) bool canRelayCommunicationChannel;
@property (nonatomic, readonly) NSString *capabilitiesDescription;
@property (nonatomic, readonly) NSArray *clusterComposition;
@property (nonatomic, readonly) unsigned int clusterType;
@property (nonatomic, readonly) NSString *composedTypeDescription;
@property (nonatomic, readonly) unsigned long long configuredClusterSize;
@property (nonatomic, readonly) NSString *currentBluetoothListeningMode;
@property (nonatomic, readonly) NSString *debugName;
@property (nonatomic, copy) _MRAVOutputDeviceDescriptorProtobuf *descriptor;
@property (getter=isDeviceGroupable, nonatomic, readonly) bool deviceGroupable;
@property (nonatomic, readonly) unsigned int deviceSubtype;
@property (nonatomic, readonly) unsigned int deviceType;
@property (getter=isEligibleForWHAPlayback, nonatomic, readonly) bool eligibleForWHAPlayback;
@property (nonatomic) MRAVEndpoint *endpoint;
@property (nonatomic, readonly) NSString *firmwareVersion;
@property (nonatomic, readonly) bool groupContainsGroupLeader;
@property (nonatomic, readonly) NSString *groupContextID;
@property (nonatomic, readonly) NSString *groupID;
@property (getter=isGroupLeader, nonatomic, readonly) bool groupLeader;
@property (getter=isGroupable, nonatomic, readonly) bool groupable;
@property (nonatomic, readonly) bool hasBatteryLevel;
@property (getter=isHeadTrackedSpatialAudioActive, nonatomic, readonly) bool headTrackedSpatialAudioActive;
@property (nonatomic, readonly) NSString *headTrackedSpatialAudioMode;
@property (nonatomic, readonly) long long hostDeviceClass;
@property (nonatomic, readonly) bool isAddedToHomeKit;
@property (nonatomic, readonly) bool isPersonalRoute;
@property (nonatomic, readonly) NSDictionary *jsonEncodableDictionaryRepresentation;
@property (getter=isLocalDevice, nonatomic, readonly) bool localDevice;
@property (nonatomic, readonly) NSString *logicalDeviceID;
@property (nonatomic, readonly) NSString *modelID;
@property (nonatomic, readonly) NSDictionary *modelSpecificInfo;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) bool parentGroupContainsDiscoverableLeader;
@property (nonatomic, copy) NSString *parentGroupIdentifier;
@property (getter=isPickedOnPairedDevice, nonatomic, readonly) bool pickedOnPairedDevice;
@property (nonatomic, readonly) NSString *playingPairedDeviceName;
@property (nonatomic, readonly) bool presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property (nonatomic, copy) NSString *primaryID;
@property (getter=isPrimaryLocalDevice, nonatomic, readonly) bool primaryLocalDevice;
@property (nonatomic, readonly) bool producesLowFidelityAudio;
@property (getter=isProxyGroupPlayer, nonatomic, readonly) bool proxyGroupPlayer;
@property (getter=isRemoteControllable, nonatomic, readonly) bool remoteControllable;
@property (nonatomic, readonly) bool requiresAuthorization;
@property (nonatomic, readonly) NSString *roleDescription;
@property (nonatomic, readonly) bool shouldBeLocallyHosted;
@property (nonatomic, readonly) MRAVOutputDeviceSourceInfo *sourceInfo;
@property (nonatomic, readonly) bool supportsBluetoothSharing;
@property (nonatomic, readonly) bool supportsBufferedAirPlay;
@property (nonatomic, readonly) bool supportsExternalScreen;
@property (nonatomic, readonly) bool supportsHAP;
@property (nonatomic, readonly) bool supportsHeadTrackedSpatialAudio;
@property (nonatomic, readonly) bool supportsMultiplayer;
@property (nonatomic, readonly) bool supportsRapport;
@property (nonatomic, readonly) bool supportsRapportRemoteControlTransport;
@property (nonatomic, readonly) bool supportsSharePlayHandoff;
@property (nonatomic, readonly) NSString *uid;
@property (getter=isUsingJSONProtocol, nonatomic, readonly) bool usingJSONProtocol;
@property (nonatomic) float volume;
@property (nonatomic, readonly) unsigned int volumeCapabilities;
@property (getter=isVolumeControlAvailable, nonatomic, readonly) bool volumeControlAvailable;

+ (id)localDeviceLocalizedName;
+ (id)localDeviceUID;

- (void).cxx_destruct;
- (id)MACAddress;
- (id)airPlayGroupID;
- (bool)allowsHeadTrackedSpatialAudio;
- (id)availableBluetoothListeningModes;
- (id)baseGroupID;
- (float)batteryLevel;
- (id)bluetoothID;
- (bool)canAccessAppleMusic;
- (bool)canAccessRemoteAssets;
- (bool)canAccessiCloudMusicLibrary;
- (bool)canFetchMediaDataFromSender;
- (bool)canPlayEncryptedProgressiveDownloadAssets;
- (bool)canProxyEndpoint;
- (bool)canRelayCommunicationChannel;
- (id)capabilitiesDescription;
- (id)clusterComposition;
- (unsigned int)clusterType;
- (id)composedTypeDescription;
- (unsigned long long)configuredClusterSize;
- (bool)containsUID:(id)arg1;
- (id)currentBluetoothListeningMode;
- (id)debugName;
- (id)description;
- (id)descriptor;
- (unsigned int)deviceSubtype;
- (unsigned int)deviceType;
- (id)endpoint;
- (id)firmwareVersion;
- (bool)groupContainsGroupLeader;
- (id)groupContextID;
- (id)groupID;
- (bool)hasBatteryLevel;
- (unsigned long long)hash;
- (id)headTrackedSpatialAudioMode;
- (long long)hostDeviceClass;
- (bool)isAddedToHomeKit;
- (bool)isAirPlayReceiverSessionActive;
- (bool)isAuxiliary;
- (bool)isDeviceGroupable;
- (bool)isEligibleForWHAPlayback;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToOutputDevice:(id)arg1;
- (bool)isGroupLeader;
- (bool)isGroupable;
- (bool)isHeadTrackedSpatialAudioActive;
- (bool)isLocalDevice;
- (bool)isPersonalRoute;
- (bool)isPickedOnPairedDevice;
- (bool)isPrimaryLocalDevice;
- (bool)isProxyGroupPlayer;
- (bool)isRemoteControllable;
- (bool)isUsingJSONProtocol;
- (bool)isVolumeControlAvailable;
- (id)jsonEncodableDictionaryRepresentation;
- (id)logicalDeviceID;
- (id)modelID;
- (id)modelSpecificInfo;
- (id)name;
- (bool)parentGroupContainsDiscoverableLeader;
- (id)parentGroupIdentifier;
- (id)playingPairedDeviceName;
- (bool)presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
- (id)primaryID;
- (bool)producesLowFidelityAudio;
- (bool)requiresAuthorization;
- (id)roleDescription;
- (void)setAirPlayGroupID:(id)arg1;
- (void)setDescriptor:(id)arg1;
- (void)setEndpoint:(id)arg1;
- (void)setParentGroupIdentifier:(id)arg1;
- (void)setPrimaryID:(id)arg1;
- (void)setVolume:(float)arg1;
- (bool)shouldBeLocallyHosted;
- (id)sourceInfo;
- (bool)supportsBluetoothSharing;
- (bool)supportsBufferedAirPlay;
- (bool)supportsExternalScreen;
- (bool)supportsHAP;
- (bool)supportsHeadTrackedSpatialAudio;
- (bool)supportsMultiplayer;
- (bool)supportsRapport;
- (bool)supportsRapportRemoteControlTransport;
- (bool)supportsSharePlayHandoff;
- (id)uid;
- (float)volume;
- (unsigned int)volumeCapabilities;

@end
