/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIKBRTIPartner : NSObject <RTIInputSystemClientDelegate, RTIInputSystemSessionDelegate> {
    bool  _applicationStateIsActiveForRTI;
    NSUUID * _currentSessionIdentifier;
    bool  _inputSystemClientEnabled;
    bool  _isNotifyingDelegateOfRemoteOutputOperation;
    <UIKBRTIPartnerDelegate> * _partnerDelegate;
    RTIInputSystemClient * _rtiClient;
    RTIDocumentState * _rtiDocumentState;
    RTIDocumentTraits * _rtiDocumentTraits;
    bool  _viewServiceStateIsActiveForRTI;
}

@property (nonatomic) bool applicationStateIsActiveForRTI;
@property (nonatomic, copy) NSUUID *currentSessionIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inputSystemClientEnabled;
@property (nonatomic, readonly) bool isNotifyingDelegateOfRemoteOutputOperation;
@property (nonatomic) <UIKBRTIPartnerDelegate> *partnerDelegate;
@property (nonatomic, retain) RTIInputSystemClient *rtiClient;
@property (nonatomic, retain) RTIDocumentState *rtiDocumentState;
@property (nonatomic, retain) RTIDocumentTraits *rtiDocumentTraits;
@property (readonly) Class superclass;
@property (nonatomic) bool viewServiceStateIsActiveForRTI;

- (void).cxx_destruct;
- (void)_applicationDidRemoveDeactivationReason:(id)arg1;
- (void)_applicationWillAddDeactivationReason:(id)arg1;
- (void)_applicationWillSuspend:(id)arg1;
- (void)_createRTIClient;
- (void)_createRTIClientIfNecessary;
- (id)_defaultRTIMachNames;
- (void)_didCreateRTIClient:(id)arg1;
- (void)_macWindowChangedKey:(id)arg1;
- (id)_newRTIConnection;
- (void)_performKeyboardOutputOperations:(id)arg1;
- (void)_queued_performTextOperations:(id)arg1;
- (void)_screenModeDidChange:(id)arg1;
- (void)_updateRTIAllowedAndNotify:(bool)arg1 withReason:(id)arg2;
- (void)_updateRTIStateIfNecessary;
- (void)_updateRTITraitsIfNecessary;
- (void)_viewServiceHostDidBecomeActive:(id)arg1;
- (void)_viewServiceHostWillResignActive:(id)arg1;
- (bool)applicationStateIsActiveForRTI;
- (void)applyRemoteDocumentStateIfNecessary:(id)arg1 force:(bool)arg2;
- (void)applyRemoteDocumentTraitsIfNecessary:(id)arg1 force:(bool)arg2;
- (void)beginAllowingRemoteTextInput:(id)arg1;
- (void)beginInputSessionWithIdentifier:(id)arg1;
- (id)currentSessionIdentifier;
- (void)dealloc;
- (id)delegate;
- (void)documentStateChanged;
- (void)documentTraitsChanged;
- (void)endAllowingRemoteTextInput:(id)arg1;
- (void)endInputSessionWithIdentifier:(id)arg1;
- (void)ensureRTIConnection;
- (id)init;
- (id)inputDelegate;
- (void)inputSession:(id)arg1 documentStateDidChange:(id)arg2;
- (void)inputSession:(id)arg1 documentTraitsDidChange:(id)arg2;
- (bool)inputSystemClientEnabled;
- (bool)isNotifyingDelegateOfRemoteOutputOperation;
- (id)partnerDelegate;
- (void)performTextOperations:(id)arg1;
- (void)restartCurrentSession;
- (id)rtiClient;
- (id)rtiDocumentState;
- (id)rtiDocumentTraits;
- (void)setApplicationStateIsActiveForRTI:(bool)arg1;
- (void)setCurrentSessionIdentifier:(id)arg1;
- (void)setInputSystemClientEnabled:(bool)arg1;
- (void)setPartnerDelegate:(id)arg1;
- (void)setRtiClient:(id)arg1;
- (void)setRtiDocumentState:(id)arg1;
- (void)setRtiDocumentTraits:(id)arg1;
- (void)setViewServiceStateIsActiveForRTI:(bool)arg1;
- (void)updateState;
- (bool)viewServiceStateIsActiveForRTI;

@end
