/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UIContextMenuContainerView : UIView <_UIPassthroughScrollInteractionDelegate> {
    UIView * _contentWrapperView;
    id /* block */  _dismissalHandler;
    bool  _dismissesInstantly;
    bool  _lastHitTestWasPassedThrough;
    _UIPassthroughScrollInteraction * _passthroughInteraction;
    id /* block */  _subtreeTraitPropagationHandler;
}

@property (nonatomic) UIView *contentWrapperView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ dismissalHandler;
@property (nonatomic) bool dismissesInstantly;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id /* block */ subtreeTraitPropagationHandler;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_attemptDismiss:(bool)arg1;
- (void)_traitCollectionDidChangeOnSubtreeInternal:(const struct _UITraitCollectionChangeDescription { id x1; id x2; bool x3; struct _UITraitCollectionTraitChanges { bool x_4_1_1; bool x_4_1_2; bool x_4_1_3; bool x_4_1_4; bool x_4_1_5; bool x_4_1_6; bool x_4_1_7; bool x_4_1_8; } x4; }*)arg1;
- (id)contentWrapperView;
- (void)didMoveToWindow;
- (id /* block */)dismissalHandler;
- (bool)dismissesInstantly;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isTransparentFocusItem;
- (bool)passthroughScrollInteraction:(id)arg1 shouldInteractAtLocation:(struct CGPoint { double x1; double x2; })arg2 withEvent:(id)arg3;
- (bool)passthroughScrollInteractionDidRecognize:(id)arg1;
- (void)setContentWrapperView:(id)arg1;
- (void)setDismissalHandler:(id /* block */)arg1;
- (void)setDismissesInstantly:(bool)arg1;
- (void)setSubtreeTraitPropagationHandler:(id /* block */)arg1;
- (id /* block */)subtreeTraitPropagationHandler;
- (void)willMoveToWindow:(id)arg1;

@end
