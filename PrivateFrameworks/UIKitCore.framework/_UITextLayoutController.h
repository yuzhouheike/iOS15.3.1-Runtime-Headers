/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UITextLayoutController : NSObject {
    bool  _allowsNonContiguousLayout;
    Class  _classicCanvasViewClass;
    bool  _documentObscured;
    bool  _drawsDebugBaselines;
    <NSLayoutManagerDelegate> * _layoutManagerDelegate;
    CUIStyleEffectConfiguration * _styleEffectConfiguration;
    _UITextInputControllerLayoutManagerConnection * _textInputControllerConnection;
    UIColor * _underlineColorForSpelling;
    UIColor * _underlineColorForTextAlternatives;
    UITextRange * _unobscuredRange;
}

@property (nonatomic) bool allowsNonContiguousLayout;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic, readonly) bool canAccessLayoutManager;
@property (nonatomic, retain) Class classicCanvasViewClass;
@property (getter=isDocumentObscured, nonatomic) bool documentObscured;
@property (nonatomic, readonly) UITextRange *documentRange;
@property (nonatomic) bool drawsDebugBaselines;
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic, readonly) NSTextContainer *firstTextContainer;
@property (nonatomic, readonly) NSLayoutManager *layoutManager;
@property (nonatomic) <NSLayoutManagerDelegate> *layoutManagerDelegate;
@property (nonatomic, copy) CUIStyleEffectConfiguration *styleEffectConfiguration;
@property (nonatomic, readonly, copy) NSArray *textContainers;
@property (nonatomic, readonly) UITextInputController *textInputController;
@property (nonatomic, readonly) NSTextStorage *textStorage;
@property (nonatomic, retain) UIColor *underlineColorForSpelling;
@property (nonatomic, retain) UIColor *underlineColorForTextAlternatives;
@property (nonatomic, retain) UITextRange *unobscuredRange;

+ (id)classicControllerWithTextContainer:(id)arg1 textStorage:(id)arg2;
+ (id)layoutControllerWithTextContainer:(id)arg1;
+ (id)modernControllerWithTextStorage:(id)arg1;

- (void).cxx_destruct;
- (void)addAnnotationAttribute:(id)arg1 value:(id)arg2 forRange:(id)arg3;
- (void)addGhostedRange:(id)arg1;
- (void)addInvisibleRange:(id)arg1;
- (void)addRenderingAttributes:(id)arg1 forRange:(id)arg2;
- (long long)affinityForPosition:(id)arg1;
- (bool)allowsNonContiguousLayout;
- (id)annotatedSubstringForRange:(id)arg1;
- (id)annotationAttribute:(id)arg1 atPosition:(id)arg2;
- (id)attributedTextInRange:(id)arg1;
- (id)attributesAtPosition:(id)arg1 inDirection:(long long)arg2;
- (long long)baseWritingDirectionAtPosition:(id)arg1;
- (id)baselineCalculatorForView:(id)arg1 typingAttributes:(id)arg2;
- (double)baselineOffsetForFirstGlyph;
- (id)beginningOfDocument;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectForRange:(id)arg1;
- (bool)canAccessLayoutManager;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })characterRangeForTextRange:(id)arg1;
- (Class)classicCanvasViewClass;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)cursorPositionAtPoint:(struct CGPoint { double x1; double x2; })arg1 inContainer:(id)arg2;
- (id)dequeueCanvasViewForTextContainer:(id)arg1;
- (id)documentRange;
- (bool)drawsDebugBaselines;
- (id)emptyTextRangeAtPosition:(id)arg1;
- (id)endOfDocument;
- (void)ensureLayoutForRange:(id)arg1;
- (void)ensureLayoutForTextContainer:(id)arg1;
- (void)enumerateTextLineFragmentsInRange:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)firstTextContainer;
- (id)initWithTextContainer:(id)arg1;
- (id)initWithTextContainer:(id)arg1 textStorage:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })insertionRectForPosition:(id)arg1 typingAttributes:(id)arg2 placeholderAttachment:(id)arg3 textContainer:(id*)arg4;
- (void)invalidateDisplayForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)invalidateLayoutForRange:(id)arg1;
- (bool)isDocumentObscured;
- (id)layoutManager;
- (id)layoutManagerDelegate;
- (id)nearestPositionAtPoint:(struct CGPoint { double x1; double x2; })arg1 inContainer:(id)arg2;
- (id)nearestTextRangeAtPoint:(struct CGPoint { double x1; double x2; })arg1 inContainer:(id)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2 affinity:(long long)arg3;
- (id)positionWithOffset:(long long)arg1 affinity:(long long)arg2;
- (id)previewRendererForRange:(id)arg1 unifyRects:(bool)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfCharacterClusterAtIndex:(unsigned long long)arg1 type:(long long)arg2;
- (void)removeAllGhostedRanges;
- (void)removeAnnotationAttribute:(id)arg1 forRange:(id)arg2;
- (void)removeInvisibleRange:(id)arg1;
- (void)removeRenderingAttributes:(id)arg1 forRange:(id)arg2;
- (void)requestTextGeometryAtPosition:(id)arg1 typingAttributes:(id)arg2 resultBlock:(id /* block */)arg3;
- (void)resetFontForExtraBulletRendering;
- (id)selectionRectsForRange:(id)arg1 fromView:(id)arg2 forContainerPassingTest:(id /* block */)arg3;
- (void)setAllowsNonContiguousLayout:(bool)arg1;
- (void)setClassicCanvasViewClass:(Class)arg1;
- (void)setDocumentObscured:(bool)arg1;
- (void)setDrawsDebugBaselines:(bool)arg1;
- (void)setLayoutManagerDelegate:(id)arg1;
- (void)setStyleEffectConfiguration:(id)arg1;
- (void)setUnderlineColorForSpelling:(id)arg1;
- (void)setUnderlineColorForTextAlternatives:(id)arg1;
- (void)setUnobscuredRange:(id)arg1;
- (id)styleEffectConfiguration;
- (id)textContainerForPosition:(id)arg1;
- (id)textContainers;
- (id)textInputController;
- (id)textRangeForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inTextContainer:(id)arg2 layoutIfNeeded:(bool)arg3;
- (id)textRangeForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)textRangeForLineEnclosingPosition:(id)arg1 effectiveAffinity:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textStorage;
- (id)underlineColorForSpelling;
- (id)underlineColorForTextAlternatives;
- (id)unobscuredRange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })updateLayoutForSizeChangeOfTextContainer:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })usedRectForTextContainer:(id)arg1;
- (id)validatedPositionForPosition:(id)arg1;
- (id)validatedRangeForRange:(id)arg1;

@end
