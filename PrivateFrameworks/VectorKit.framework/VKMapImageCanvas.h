/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKMapImageCanvas : VKImageCanvas <MDSnapshotMap, VKMapModelDelegate> {
    struct _retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { 
        int (**_vptr$_retain_ptr)(); 
        VKManifestTileGroupObserverProxy *_obj; 
        struct _retain_objc { } _retain; 
        struct _release_objc { } _release; 
    }  _manifestTileGroupObserverProxy;
    void * _mapEngine;
    VKMapModel * _mapModel;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cancelTileRequests;
- (void)clearScene;
- (void)dealloc;
- (id)initWithMapEngine:(void*)arg1;
- (void)mapModel:(id)arg1 labelMarkerDidChangeState:(const void*)arg2;
- (void)mapModel:(id)arg1 selectedLabelMarkerWillDisappear:(const void*)arg2;
- (void)mapModelDidUpdateMinMaxZoomLevel:(id)arg1;
- (void)mapModelLabelsDidLayout:(id)arg1;
- (void)resetCameraController;
- (void)setMapType:(int)arg1;
- (void)tileGroupDidChange;
- (void)updateWithTimestamp:(double)arg1 withContext:(void*)arg2;

@end
