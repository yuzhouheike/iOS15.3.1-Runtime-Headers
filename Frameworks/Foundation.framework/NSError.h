/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */

@interface NSError : NSObject <AMSSecureCodingSanitizable, BSDescriptionProviding, CARPFObject, NSCopying, NSSecureCoding, PQLValuable> {
    long long  _code;
    NSString * _domain;
    void * _reserved;
    NSDictionary * _userInfo;
}

@property (nonatomic, readonly) bool _geo_isXPCInterruptedError;
@property (getter=_mapkit_isCLDenied, nonatomic, readonly) bool _mapkit_CLDenied;
@property (getter=_mapkit_isCLErrorNetwork, nonatomic, readonly) bool _mapkit_CLErrorNetwork;
@property (getter=_mapkit_isCLHeadingFailure, nonatomic, readonly) bool _mapkit_CLHeadingFailure;
@property (getter=_mapkit_isCLLocationUnknown, nonatomic, readonly) bool _mapkit_CLLocationUnknown;
@property (nonatomic, readonly, retain) NSURL *_mapkit_locationErrorSettingsURL;
@property (getter=ac_isDiskFullSQLError, nonatomic, readonly) bool ac_diskFullSQLError;
@property (getter=ac_isUnrecoverableDatabaseError, nonatomic, readonly) bool ac_unrecoverableDatabaseError;
@property (nonatomic, readonly) NSString *ams_message;
@property (getter=ams_isTimeoutError, nonatomic, readonly) bool ams_timeoutError;
@property (nonatomic, readonly) NSString *ams_title;
@property (nonatomic, readonly) NSError *ams_underlyingError;
@property (getter=ams_isUserCancelledError, nonatomic, readonly) bool ams_userCancelledError;
@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (getter=isCARPFError, nonatomic, readonly) bool carpfError;
@property (readonly, copy) NSString *carpf_privateDescription;
@property (readonly, copy) NSString *carpf_shortDescription;
@property (nonatomic, readonly, copy) NSDictionary *cat_dictionaryValue;
@property (readonly) long long code;
@property (getter=isComparisonError, nonatomic, readonly) bool comparisonError;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *domain;
@property (nonatomic, readonly) NSURL *fp_collidingURL;
@property (nonatomic, readonly) bool fp_isFeatureUnsupportedError;
@property (nonatomic, readonly) bool fp_isNotPermittedError;
@property (nonatomic, readonly) bool fp_isRemoteCrashError;
@property (nonatomic, readonly) bool fp_isSyncAnchorExpiredError;
@property (nonatomic, readonly) NSObject *fp_prettyDescription;
@property (nonatomic, readonly) NSError *fp_unwrappedInternalError;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSString *helpAnchor;
@property (readonly, copy) NSString *localizedDescription;
@property (readonly, copy) NSString *localizedFailureReason;
@property (readonly, copy) NSArray *localizedRecoveryOptions;
@property (readonly, copy) NSString *localizedRecoverySuggestion;
@property (nonatomic, readonly) NSError *msv_underlyingError;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly) id recoveryAttempter;
@property (readonly) Class superclass;
@property (readonly, copy) NSArray *underlyingErrors;
@property (readonly, copy) NSDictionary *userInfo;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)_readCorruptErrorWithFormat:(id)arg1;
+ (void)_registerBuiltInFormatters;
+ (void)_registerFormatter:(int (*)arg1 forErrorKey:(id)arg2 parameters:(const char *)arg3;
+ (void)_setFileNameLocalizationEnabled:(bool)arg1;
+ (void)_web_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
+ (id)_web_errorWithDomain:(id)arg1 code:(long long)arg2 URL:(id)arg3;
+ (id)_web_errorWithDomain:(id)arg1 code:(long long)arg2 failingURL:(id)arg3;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3;
+ (void)setUserInfoValueProviderForDomain:(id)arg1 provider:(id /* block */)arg2;
+ (bool)supportsSecureCoding;
+ (id /* block */)userInfoValueProviderForDomain:(id)arg1;

- (unsigned long long)_cfTypeID;
- (id)_cocoaErrorString:(id)arg1;
- (id)_cocoaErrorString:(id)arg1 fromBundle:(id)arg2 tableName:(id)arg3;
- (id)_cocoaErrorStringWithKind:(id)arg1;
- (id)_cocoaErrorStringWithKind:(id)arg1 variant:(id)arg2;
- (long long)_collectApplicableUserInfoFormatters:(struct { /* ? */ }**)arg1 max:(long long)arg2;
- (id)_formatCocoaErrorString:(id)arg1 parameters:(const char *)arg2 applicableFormatters:(struct { /* ? */ }**)arg3 count:(long long)arg4;
- (struct __CFString { }*)_retainedUserInfoCallBackForKey:(id)arg1;
- (bool)_web_errorIsInDomain:(id)arg1;
- (id)_web_failingURL;
- (id)_web_initWithDomain:(id)arg1 code:(long long)arg2 failingURL:(id)arg3;
- (id)_web_initWithDomain_nowarn:(id)arg1 code:(long long)arg2 URL:(id)arg3;
- (id)_web_localizedDescription;
- (long long)code;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)domain;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)helpAnchor;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3;
- (bool)isEqual:(id)arg1;
- (id)localizedDescription;
- (id)localizedFailureReason;
- (id)localizedRecoveryOptions;
- (id)localizedRecoverySuggestion;
- (id)recoveryAttempter;
- (id)redactedDescription;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)underlyingErrors;
- (id)userInfo;

// Image: /Developer/Library/PrivateFrameworks/DebugHierarchyFoundation.framework/DebugHierarchyFoundation

+ (id)debugHierarchyErrorFromException:(id)arg1 caughtDuringRequest:(id)arg2 forMethodSignature:(const char *)arg3;

- (id)debugHierarchyResponseDataForRequest:(id)arg1;

// Image: /System/Library/Frameworks/Accounts.framework/Accounts

- (bool)ac_isDiskFullSQLError;
- (bool)ac_isUnrecoverableDatabaseError;
- (id)ac_sanitizeObject:(id)arg1;
- (id)ac_secureCodingError;

// Image: /System/Library/Frameworks/CallKit.framework/CallKit

+ (id)cx_callDirectoryManagerErrorWithCode:(long long)arg1;
+ (id)cx_callDirectoryManagerErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)cx_callDirectoryStoreErrorWithCode:(long long)arg1;
+ (id)cx_errorWithCode:(long long)arg1;
+ (id)cx_incomingCallErrorWithCode:(long long)arg1;
+ (id)cx_notificationServiceExtensionErrorWithCode:(long long)arg1;
+ (id)cx_requestTransactionErrorWithCode:(long long)arg1;

// Image: /System/Library/Frameworks/ClassKit.framework/ClassKit

+ (bool)cls_assignError:(id*)arg1 code:(long long)arg2 description:(id)arg3;
+ (bool)cls_assignError:(id*)arg1 code:(long long)arg2 errorObject:(id)arg3 description:(id)arg4;
+ (bool)cls_assignError:(id*)arg1 code:(long long)arg2 errorObject:(id)arg3 format:(id)arg4;
+ (bool)cls_assignError:(id*)arg1 code:(long long)arg2 format:(id)arg3;
+ (bool)cls_assignError:(id*)arg1 fromError:(id)arg2;
+ (id)cls_createErrorWithCode:(long long)arg1 description:(id)arg2;
+ (id)cls_createErrorWithCode:(long long)arg1 errorObject:(id)arg2 description:(id)arg3;
+ (id)cls_createErrorWithCode:(long long)arg1 errorObject:(id)arg2 format:(id)arg3;
+ (id)cls_createErrorWithCode:(long long)arg1 format:(id)arg2;
+ (id)cls_createErrorWithCode:(long long)arg1 successfulObjects:(id)arg2 underlyingErrors:(id)arg3 description:(id)arg4;
+ (id)cls_createErrorWithCode:(long long)arg1 underlyingError:(id)arg2 description:(id)arg3;

- (void)cls_debug:(id)arg1;
- (void)cls_info:(id)arg1;
- (bool)cls_isClassKitError;
- (bool)cls_isRetryable:(bool)arg1;
- (void)cls_log:(id)arg1;
- (void)cls_notice:(id)arg1;
- (id)cls_underlyingErrorWithDomain:(id)arg1;
- (void)cls_warn:(id)arg1;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

+ (id)CKErrorFromErrno;
+ (id)CKErrorWithPOSIXCode:(int)arg1;

- (id)CKClientSuitableError;
- (id)CKClientSuitableErrorSpecificUserInfo;
- (id)CKClientSuitableUnderlyingError;
- (id)CKDescriptionPropertiesWithPublic:(bool)arg1 private:(bool)arg2 shouldExpand:(bool)arg3;
- (id)CKErrorScopedToZoneIDs:(id)arg1;
- (bool)CKHasCKErrorInChildChain;
- (bool)CKHasTopLevelUnderlyingError;
- (bool)CKIsCKError;
- (bool)CKIsNotFoundError;
- (bool)CKIsPOSIXErrorCode:(long long)arg1;
- (bool)CK_isCKSQLiteError;
- (void)ck_bindInStatement:(id)arg1 atIndex:(unsigned long long)arg2;
- (bool)isComparisonError;

// Image: /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth

+ (id)errorWithInfo:(id)arg1;

// Image: /System/Library/Frameworks/FileProvider.framework/FileProvider

+ (id)_fp_errorWithPOSIXCode:(int)arg1 itemURL:(id)arg2 debugDescription:(id)arg3 format:(id)arg4 arguments:(char *)arg5;
+ (id)fileProviderErrorForCollisionWithItem:(id)arg1;
+ (id)fileProviderErrorForNonExistentItemWithIdentifier:(id)arg1;
+ (id)fileProviderErrorForRejectedDeletionOfItem:(id)arg1;
+ (id)fp_errorForCollisionWithURL:(id)arg1;
+ (id)fp_errorWithPOSIXCode:(int)arg1;
+ (id)fp_errorWithPOSIXCode:(int)arg1 description:(id)arg2;
+ (id)fp_errorWithPOSIXCode:(int)arg1 itemURL:(id)arg2 debugDescription:(id)arg3;
+ (void)fp_initLocalizationStrings;
+ (id)fp_invalidArgumentError:(id)arg1;
+ (id)fp_translocatedError:(id)arg1;

- (id)fp_annotatedErrorWithItem:(id)arg1 variant:(id)arg2;
- (id)fp_annotatedErrorWithItems:(id)arg1 variant:(id)arg2;
- (id)fp_annotatedErrorWithName:(id)arg1;
- (id)fp_annotatedErrorWithName:(id)arg1 path:(id)arg2 variant:(id)arg3;
- (id)fp_annotatedErrorWithOperationItem:(id)arg1;
- (id)fp_annotatedErrorWithRecoveryAttempter:(id)arg1 fpProviderDomainId:(id)arg2;
- (id)fp_annotatedErrorWithURL:(id)arg1 variant:(id)arg2;
- (id)fp_asWarning;
- (id)fp_collidingURL;
- (id)fp_genericPreflightError;
- (id)fp_internalErrorForVendorErrorWithCallerDescription:(id)arg1 itemCreationBlock:(id /* block */)arg2;
- (bool)fp_isCocoaErrorCode:(long long)arg1;
- (bool)fp_isFeatureUnsupportedError;
- (bool)fp_isFileProviderError:(long long)arg1;
- (bool)fp_isFileProviderInternalError:(long long)arg1;
- (bool)fp_isGenericPreflightError;
- (bool)fp_isNotPermittedError;
- (bool)fp_isPOSIXErrorCode:(int)arg1;
- (bool)fp_isRemoteCrashError;
- (bool)fp_isSyncAnchorExpiredError;
- (bool)fp_isWarning;
- (id)fp_prettyDescription;
- (id)fp_prettyDescription:(unsigned long long)arg1;
- (id)fp_recoverableErrorWithBlock:(id /* block */)arg1 fpProviderDomainId:(id)arg2 operationService:(id)arg3;
- (id)fp_strippedError;
- (id)fp_unwrappedErrorForDomains:(id)arg1;
- (id)fp_unwrappedInternalError;
- (id)fp_userInfoFPItem;
- (id)fp_userInfoItem;
- (id)fp_userInfoValueForKey:(id)arg1;

// Image: /System/Library/Frameworks/MapKit.framework/MapKit

+ (id)_errorWithExtensionServiceError:(long long)arg1;

- (long long)_mapkit_directionsErrorCode;
- (id)_mapkit_error;
- (id)_mapkit_errorWithDirectionsError:(id)arg1;
- (bool)_mapkit_isCLDenied;
- (bool)_mapkit_isCLErrorNetwork;
- (bool)_mapkit_isCLHeadingFailure;
- (bool)_mapkit_isCLLocationUnknown;
- (bool)_mapkit_isDirectionsError;
- (bool)_mapkit_isLocationAuthorizationError;
- (id)_mapkit_locationErrorSettingsURL;
- (id)_mapkit_transitIncident;
- (long long)_mapkit_underlyingGEOError;

// Image: /System/Library/Frameworks/Metal.framework/Metal

+ (id)errorWithMTLCaptureErrorCode:(long long)arg1;

- (id)initWithIOAccelError:(long long)arg1;

// Image: /System/Library/Frameworks/UserNotifications.framework/UserNotifications

+ (id)_un_descriptionForUNErrorCode:(long long)arg1;
+ (id)_un_descriptionForUNPrivateErrorCode:(long long)arg1;
+ (id)_updateUserInfo:(id)arg1 withLocalizedDescription:(id)arg2;
+ (id)un_errorWithUNErrorCode:(long long)arg1 userInfo:(id)arg2;
+ (id)un_errorWithUNPrivateErrorCode:(long long)arg1 userInfo:(id)arg2;

// Image: /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities

+ (id)ax_errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3;
+ (id)ax_errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 arguments:(char *)arg4;
+ (id)ax_errorWithDomain:(id)arg1 description:(id)arg2;

- (id)ax_nonRedundantDescription;

// Image: /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount

+ (id)aa_errorWithCode:(long long)arg1;
+ (id)aa_errorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)aa_errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)aa_errorWithServerResponse:(id)arg1;

- (id)_aa_userReadableError;
- (bool)aa_isAACustodianRecoveryError;
- (bool)aa_isAACustodianRecoveryErrorWithCode:(long long)arg1;
- (bool)aa_isAAErrorWithCode:(long long)arg1;
- (bool)aa_isAASignInErrorWithCode:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication

+ (id)aida_errorWithCode:(long long)arg1;
+ (id)aida_errorWithCode:(long long)arg1 userInfo:(id)arg2;

// Image: /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices

- (id)_ams_firstUnderlyingErrorPassingTest:(id /* block */)arg1;
- (id)ams_errorByAddingToMultipleUnderlyingErrors:(id)arg1;
- (id)ams_errorByAddingUnderlyingError:(id)arg1;
- (id)ams_errorByAddingUserInfo:(id)arg1;
- (id)ams_errorByCombiningWithUnderlyingError:(id)arg1;
- (id)ams_errorWithMultipleUnderlyingErrors:(id)arg1;
- (id)ams_errorWithUnderlyingError:(id)arg1;
- (bool)ams_hasDomain:(id)arg1;
- (bool)ams_hasDomain:(id)arg1 code:(unsigned long long)arg2;
- (bool)ams_isTimeoutError;
- (bool)ams_isUserCancelledError;
- (id)ams_message;
- (id)ams_multipleUnderlyingErrors;
- (bool)ams_recursiveHasDomain:(id)arg1 code:(unsigned long long)arg2;
- (id)ams_sanitizedForSecureCoding;
- (id)ams_title;
- (id)ams_underlyingError;
- (id)ams_underlyingErrorWithDomain:(id)arg1;
- (id)ams_underlyingErrorWithDomain:(id)arg1 code:(unsigned long long)arg2;

// Image: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit

+ (id)ak_errorWithCode:(long long)arg1;
+ (id)ak_errorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)ak_errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)ak_wrappedAnisetteError:(int)arg1;

- (id)ak_errorByAppendingUserInfo:(id)arg1;
- (bool)ak_isAuthenticationErrorWithCode:(long long)arg1;
- (bool)ak_isIncompatibleDevicesError;
- (bool)ak_isServiceError;
- (bool)ak_isSurrogateAuthAlreadyInProgressError;
- (bool)ak_isUnableToPromptError;
- (bool)ak_isUserCancelError;
- (bool)ak_isUserInitiatedError;
- (bool)ak_isUserSkippedError;
- (bool)ak_isUserTryAgainError;

// Image: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard

- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;

// Image: /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices

- (bool)isBSServiceConnectionError;

// Image: /System/Library/PrivateFrameworks/CARPFoundation.framework/CARPFoundation

+ (id)carpfErrorWithCode:(long long)arg1;
+ (id)carpfErrorWithCode:(long long)arg1 description:(id)arg2 reason:(id)arg3 suggestion:(id)arg4;
+ (id)carpfErrorWithCode:(long long)arg1 description:(id)arg2 reason:(id)arg3 suggestion:(id)arg4 underlyingError:(id)arg5;
+ (id)carpfErrorWithCode:(long long)arg1 reason:(id)arg2 suggestion:(id)arg3;
+ (id)carpfErrorWithCode:(long long)arg1 reason:(id)arg2 suggestion:(id)arg3 underlyingError:(id)arg4;
+ (id)carpfErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)carpf_errorWithException:(id)arg1;
+ (id)carpf_shortDescription;
+ (id)carpf_unarchiveFromData:(id)arg1 error:(id*)arg2;

- (id)carpf_privateDescription;
- (id)carpf_shortDescription;
- (bool)isCARPFError;

// Image: /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst

+ (id)formattedCode:(long long)arg1;

- (id)cat_dictionaryValue;
- (id)formattedCode;
- (id)verboseDescription;
- (id)verboseDescriptionWithIdentation:(unsigned long long)arg1;

// Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs

+ (id)br_errorFromErrno;
+ (id)br_errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3;
+ (id)br_errorWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3 description:(id)arg4;
+ (id)br_errorWithPOSIXCode:(int)arg1;
+ (id)br_errorWithPOSIXCode:(int)arg1 description:(id)arg2;
+ (id)brc_addPartialError:(id)arg1 forURL:(id)arg2 toError:(id)arg3;
+ (id)brc_errorAcceptAlreadyInProgressForURL:(id)arg1;
+ (id)brc_errorAccountMismatch;
+ (id)brc_errorAppLibraryNotFound:(id)arg1;
+ (id)brc_errorClientZoneNotFound:(id)arg1;
+ (id)brc_errorCompatibilityIssue;
+ (id)brc_errorCoreAnalyticsErrorCountMismatchWithExpected:(id)arg1 actual:(id)arg2;
+ (id)brc_errorDaemonShouldBeLoggedOut;
+ (id)brc_errorDocumentAtURL:(id)arg1 isNotExternalToAppLibrary:(id)arg2;
+ (id)brc_errorDocumentIsNoLongerSharedAtURL:(id)arg1;
+ (id)brc_errorDocumentIsNotShared;
+ (id)brc_errorDocumentIsNotSharedAtURL:(id)arg1;
+ (id)brc_errorDocumentWithFilename:(id)arg1 size:(long long)arg2 isTooLargeToUpload:(long long)arg3;
+ (id)brc_errorDriveDisabledOrAppLibraryDisabled;
+ (id)brc_errorFolderHasSharedSubitems;
+ (id)brc_errorFolderHasSharedSubitemsWithSharedByMeURLs:(id)arg1 sharedToMeURLs:(id)arg2;
+ (id)brc_errorFolderHierarchyTooDeep;
+ (id)brc_errorInvalidParameter:(id)arg1 value:(id)arg2;
+ (id)brc_errorItemAlreadyPartOfAShare;
+ (id)brc_errorItemChanged;
+ (id)brc_errorItemInTrash;
+ (id)brc_errorItemIneligibleFromSyncForInode:(id)arg1;
+ (id)brc_errorItemNotFound:(id)arg1;
+ (id)brc_errorItemNotShareable;
+ (id)brc_errorLoggedOut;
+ (id)brc_errorMethodNotImplemented:(SEL)arg1;
+ (id)brc_errorNoAppLibraryForBundle:(id)arg1;
+ (id)brc_errorNoDocumentAtURL:(id)arg1 underlyingPOSIXError:(int)arg2;
+ (id)brc_errorNoSuitableClientApp;
+ (id)brc_errorNotInCloud:(id)arg1;
+ (id)brc_errorNotOnDisk:(id)arg1;
+ (id)brc_errorOperationCancelled;
+ (id)brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:(id)arg1;
+ (id)brc_errorPermissionError:(id)arg1;
+ (id)brc_errorPermissionErrorAtURL:(id)arg1;
+ (id)brc_errorSyncBlocked;
+ (id)brc_errorSyncDisabled:(id)arg1;
+ (id)brc_errorUnknownKey:(id)arg1;

- (bool)br_isCloudDocsErrorCode:(long long)arg1;
- (bool)br_isCocoaErrorCode:(long long)arg1;
- (bool)br_isPOSIXErrorCode:(long long)arg1;
- (id)br_underlyingPOSIXError;

// Image: /System/Library/PrivateFrameworks/DMCUtilities.framework/DMCUtilities

+ (id)DMCErrorWithDomain:(id)arg1 code:(long long)arg2 descriptionArray:(id)arg3 errorType:(id)arg4;
+ (id)DMCErrorWithDomain:(id)arg1 code:(long long)arg2 descriptionArray:(id)arg3 suggestion:(id)arg4 USEnglishSuggestion:(id)arg5 underlyingError:(id)arg6 errorType:(id)arg7;
+ (id)DMCErrorWithDomain:(id)arg1 code:(long long)arg2 descriptionArray:(id)arg3 underlyingError:(id)arg4 errorType:(id)arg5;

- (bool)DMCContainsErrorDomain:(id)arg1 code:(long long)arg2;
- (id)DMCCopyAsPrimaryError;
- (id)DMCErrorType;
- (id)DMCFindPrimaryError;
- (id)DMCUSEnglishDescription;
- (id)DMCUSEnglishSuggestion;
- (id)DMCVerboseDescription;

// Image: /System/Library/PrivateFrameworks/ExtensionFoundation.framework/ExtensionFoundation

+ (id)_EX_parameterError;
+ (id)_EX_unimplementedError;

// Image: /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle

+ (id)fa_familyErrorWithCode:(long long)arg1;
+ (id)fa_familyErrorWithCode:(long long)arg1 exception:(id)arg2;
+ (id)fa_familyErrorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)fa_familyErrorWithCode:(long long)arg1 userInfo:(id)arg2;

// Image: /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices

+ (id)sceneMessageErrorWithCode:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

+ (id)GEOErrorWithCode:(long long)arg1 reason:(id)arg2;
+ (id)GEOErrorWithCode:(long long)arg1 reason:(id)arg2 underlyingError:(id)arg3;
+ (id)GEOErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)_geo_errorFromXPCData:(id)arg1;
+ (id)_geo_errorFromXPCError:(id)arg1;
+ (id)geo_insufficientFilesystemCapacityWithBytesNeeded:(unsigned long long)arg1 bytesAvailable:(unsigned long long)arg2;
+ (id)zilchDecoderErrorForNoSolution;

- (bool)_geo_isXPCInterruptedError;
- (id)_geo_newXPCData;
- (id)zilchDecoderTileLoadingError;

// Image: /System/Library/PrivateFrameworks/HID.framework/HID

+ (id)errorWithIOReturn:(int)arg1;

// Image: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation

+ (id)genericErrorWithFile:(const char *)arg1 function:(const char *)arg2 lineNumber:(long long)arg3;

// Image: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration

+ (id)MCErrorWithDomain:(id)arg1 code:(long long)arg2 descriptionArray:(id)arg3 errorType:(id)arg4;
+ (id)MCErrorWithDomain:(id)arg1 code:(long long)arg2 descriptionArray:(id)arg3 suggestion:(id)arg4 USEnglishSuggestion:(id)arg5 underlyingError:(id)arg6 errorType:(id)arg7;
+ (id)MCErrorWithDomain:(id)arg1 code:(long long)arg2 descriptionArray:(id)arg3 underlyingError:(id)arg4 errorType:(id)arg5;

- (bool)MCContainsErrorDomain:(id)arg1 code:(long long)arg2;
- (id)MCCopyAsPrimaryError;
- (id)MCErrorType;
- (id)MCFindPrimaryError;
- (id)MCUSEnglishDescription;
- (id)MCUSEnglishSuggestion;
- (id)MCVerboseDescription;

// Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote

- (id)initWithMRError:(long long)arg1;
- (id)initWithMRError:(long long)arg1 description:(id)arg2;
- (id)initWithMRError:(long long)arg1 format:(id)arg2;
- (id)initWithMRError:(long long)arg1 userInfo:(id)arg2;
- (id)mr_errorByEnvelopingWithMRError:(long long)arg1;
- (id)mr_initWithProtobuf:(id)arg1;
- (id)mr_protobuf;
- (id)recursiveUnderlyingError;

// Image: /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices

+ (id)MSVErrorWithMissingDependencies:(id)arg1;
+ (id)MSVErrorWithMissingDependency:(id)arg1;
+ (id)_msv_errorWithDomain:(id)arg1 code:(long long)arg2 underlyingError:(id)arg3 userInfo:(id)arg4 debugDescriptionFormat:(id)arg5 arguments:(char *)arg6;
+ (id)msv_errorWithDomain:(id)arg1 code:(long long)arg2 debugDescription:(id)arg3;
+ (id)msv_errorWithDomain:(id)arg1 code:(long long)arg2 underlyingError:(id)arg3 debugDescription:(id)arg4;
+ (id)msv_errorWithDomain:(id)arg1 code:(long long)arg2 underlyingError:(id)arg3 userInfo:(id)arg4 debugDescription:(id)arg5;
+ (id)msv_errorWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3 debugDescription:(id)arg4;

- (id)msv_codeDescription;
- (id)msv_description;
- (id)msv_errorByRemovingUnsafeUserInfo;
- (id)msv_errorByUnwrappingDomain:(id)arg1;
- (id)msv_errorByUnwrappingDomain:(id)arg1 code:(long long)arg2;
- (id)msv_errorByWrappingWithDomain:(id)arg1 code:(long long)arg2 debugDescription:(id)arg3;
- (id)msv_errorByWrappingWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3 debugDescription:(id)arg4;
- (id)msv_underlyingError;

// Image: /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry

- (id)nr_filteredError;
- (id)nr_safeDescription;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation

+ (id)_navigation_errorWithCode:(long long)arg1;
+ (id)_navigation_errorWithCode:(long long)arg1 debugDescription:(id)arg2 underlyingError:(id)arg3;
+ (id)_navigation_errorWithCode:(long long)arg1 userInfo:(id)arg2;

- (id)_navigation_errorCodeAsString;

// Image: /System/Library/PrivateFrameworks/OSAnalytics.framework/OSAnalytics

- (id)augmentWithPrefix:(id)arg1;

// Image: /System/Library/PrivateFrameworks/OctagonTrust.framework/OctagonTrust

+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 underlying:(id)arg4;

// Image: /System/Library/PrivateFrameworks/PersonaKit.framework/PersonaKit

+ (id)pr_errorWithCode:(long long)arg1;

- (bool)pr_isInPersonaDomain;
- (bool)pr_isNetworkAvailabilityError;

// Image: /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices

+ (id)rbs_errorClientNotEntitled:(id)arg1 permanent:(bool)arg2;

- (bool)rbs_isPermanentFailure;

// Image: /System/Library/PrivateFrameworks/SignpostSupport.framework/SignpostSupport

+ (id)errorWithCode:(unsigned long long)arg1 description:(id)arg2;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

+ (void)_registerWebKitErrors;
+ (id)_webKitErrorWithCode:(int)arg1 failingURL:(id)arg2;
+ (id)_webKitErrorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (void)_webkit_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
+ (id)_webkit_errorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;

- (id)_initWithPluginErrorCode:(int)arg1 contentURL:(id)arg2 pluginPageURL:(id)arg3 pluginName:(id)arg4 MIMEType:(id)arg5;
- (id)_webkit_initWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;

// Image: /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/XCTTargetBootstrap

+ (id)_xct_error:(long long)arg1 description:(id)arg2;
+ (id)_xct_error:(long long)arg1 description:(id)arg2 userInfo:(id)arg3;

// Image: /usr/lib/libprequelite.dylib

+ (id)errorForDB:(struct sqlite3 { }*)arg1;
+ (id)errorForDB:(struct sqlite3 { }*)arg1 SQL:(id)arg2;
+ (id)errorForDB:(struct sqlite3 { }*)arg1 stmt:(struct sqlite3_stmt { }*)arg2;
+ (id)errorWithSqliteCode:(int)arg1 andMessage:(id)arg2;
+ (id)newFromSqliteStatement:(struct sqlite3_stmt { }*)arg1 atIndex:(int)arg2;
+ (id)newFromSqliteValue:(struct sqlite3_value { }*)arg1;

- (long long)extendedSqliteCode;
- (bool)isSqliteErrorCode:(long long)arg1;
- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;
- (id)sqliteStatement;

@end
