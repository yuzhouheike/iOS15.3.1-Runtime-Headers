/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */

@interface NSUUID : NSObject <AFSecurityDigestibleChunksProviding, BSXPCSecureCoding, CARPFObject, NSCopying, NSSecureCoding, PQLValuable, SASerializable, _PASDistilledString>

@property (readonly, copy) NSString *UUIDString;
@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (readonly, copy) NSString *carpf_privateDescription;
@property (readonly, copy) NSString *carpf_shortDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly) Class superclass;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)UUID;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (bool)supportsSecureCoding;

- (id)UUIDString;
- (struct __CFString { }*)_cfUUIDString;
- (Class)classForCoder;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)getUUIDBytes:(unsigned char)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithUUIDBytes:(unsigned char)arg1;
- (id)initWithUUIDString:(id)arg1;
- (bool)isEqual:(id)arg1;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

- (void)ck_bindInStatement:(id)arg1 atIndex:(unsigned long long)arg2;

// Image: /System/Library/Frameworks/CoreServices.framework/CoreServices

+ (id)_LS_UUIDWithData:(id)arg1 digestType:(long long)arg2;
+ (id)_LS_nullUUID;

// Image: /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices

- (id)ams_base62String;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

- (void)af_enumerateDigestibleChunksWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard

+ (bool)supportsBSXPCSecureCoding;

- (void)encodeWithBSXPCCoder:(id)arg1;
- (id)initWithBSXPCCoder:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CARPFoundation.framework/CARPFoundation

+ (id)carpf_UUIDWithNamespace:(id)arg1 data:(id)arg2;
+ (id)carpf_shortDescription;
+ (id)carpf_zeroUUID;
+ (id)zeroUUID;

- (bool)carpf_isEqualToUUID:(id)arg1;
- (bool)carpf_isEqualToUUIDString:(id)arg1;
- (id)carpf_privateDescription;
- (id)carpf_shortDescription;
- (id)initWithNamespace:(id)arg1 data:(id)arg2;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

+ (id)_maps_UUIDWithData:(id)arg1;

- (id)_maps_data;

// Image: /System/Library/PrivateFrameworks/IconFoundation.framework/IconFoundation

+ (id)_IF_UUIDByXORingUUIDs:(id)arg1;
+ (id)_IF_UUIDWithBytes:(const char *)arg1 size:(unsigned long long)arg2;
+ (id)_IF_UUIDWithData:(id)arg1;
+ (id)_IF_UUIDWithDouble:(double)arg1;
+ (id)_IF_UUIDWithInt64:(long long)arg1;
+ (id)_IF_UUIDWithOSType:(unsigned int)arg1;
+ (id)_IF_UUIDWithString:(id)arg1;
+ (id)_IF_nullUUID;

- (void)_IF_getUUIDBytes:(char *)arg1 hash64:(unsigned long long*)arg2;

// Image: /System/Library/PrivateFrameworks/IconServices.framework/IconServices

+ (id)_IS_UUIDByXORingUUIDs:(id)arg1;
+ (id)_IS_UUIDWithBytes:(const char *)arg1 size:(unsigned long long)arg2;
+ (id)_IS_UUIDWithData:(id)arg1;
+ (id)_IS_UUIDWithInt64:(long long)arg1;
+ (id)_IS_UUIDWithOSType:(unsigned int)arg1;
+ (id)_IS_UUIDWithString:(id)arg1;
+ (id)_IS_nullUUID;

- (void)_IS_getUUIDBytes:(char *)arg1 hash64:(unsigned long long*)arg2;

// Image: /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices

+ (id)msv_UUIDWithData:(id)arg1;
+ (id)msv_uuidWithCFUUID:(struct __CFUUID { }*)arg1;
+ (id)uuidWithMSVBase64UUID:(id)arg1;

- (id)MSVBase64UUIDString;
- (id)initWithMSVBase64UUIDString:(id)arg1;
- (id)msv_UUIDData;
- (const struct __CFUUID { }*)msv_copyCFUUID;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation

+ (id)_navigation_dataForUUID;
+ (id)_navigation_uuidForData:(id)arg1;

- (id)_navigation_data;

// Image: /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport

- (id)_pas_revivedString;

// Image: /System/Library/PrivateFrameworks/SampleAnalysis.framework/SampleAnalysis

+ (id)classDictionaryKey;
+ (id)newInstanceWithoutReferencesFromSerializedBuffer:(const void*)arg1 bufferLength:(unsigned long long)arg2;

- (bool)addSelfToBuffer:(void*)arg1 bufferLength:(unsigned long long)arg2 withCompletedSerializationDictionary:(id)arg3;
- (void)addSelfToSerializationDictionary:(id)arg1;
- (void)populateReferencesUsingBuffer:(const void*)arg1 bufferLength:(unsigned long long)arg2 andDeserializationDictionary:(id)arg3 andDataBufferDictionary:(id)arg4;
- (unsigned long long)sizeInBytesForSerializedVersion;

// Image: /System/Library/PrivateFrameworks/SiriAnalytics.framework/SiriAnalytics

+ (id)sa_deterministicUUIDv5ForNamespace:(id)arg1 name:(id)arg2;
+ (id)sa_deterministicUUIDv5ForNamespaceUUID:(id)arg1 sourceUUID:(id)arg2;

- (id)sa_uuidBytes;

// Image: /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation

- (id)si_uuidBytes;

// Image: /usr/lib/libprequelite.dylib

+ (id)newFromSqliteStatement:(struct sqlite3_stmt { }*)arg1 atIndex:(int)arg2;
+ (id)newFromSqliteValue:(struct sqlite3_value { }*)arg1;

- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;

@end
