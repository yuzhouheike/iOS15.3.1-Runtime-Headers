/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@interface CKThrottle : NSObject <NSSecureCoding> {
    unsigned long long  _allowedRequestCount;
    NSString * _bundleID;
    NSString * _containerIdentifier;
    unsigned long long  _currentRequestWindowIndex;
    long long  _databaseScope;
    NSDate * _expirationDate;
    NSString * _functionName;
    unsigned long long  _intervalLengthSeconds;
    NSString * _label;
    NSString * _operationGroupNamePrefix;
    int  _operationType;
    unsigned long long  _repeatEverySeconds;
    NSNumber * _rowID;
    unsigned long long  _sentRequestCount;
    NSString * _serviceName;
    NSDate * _throttleStartDate;
    NSString * _zoneName;
}

@property (nonatomic) unsigned long long allowedRequestCount;
@property (nonatomic, copy) NSString *bundleID;
@property (nonatomic, copy) NSString *containerIdentifier;
@property (nonatomic) unsigned long long currentRequestWindowIndex;
@property (nonatomic) long long databaseScope;
@property (nonatomic, retain) NSDate *expirationDate;
@property (nonatomic, copy) NSString *functionName;
@property (nonatomic) unsigned long long intervalLengthSeconds;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, copy) NSString *operationGroupNamePrefix;
@property (nonatomic) int operationType;
@property (nonatomic) unsigned long long repeatEverySeconds;
@property (nonatomic, copy) NSNumber *rowID;
@property (nonatomic) unsigned long long sentRequestCount;
@property (nonatomic, copy) NSString *serviceName;
@property (nonatomic, retain) NSDate *throttleStartDate;
@property (nonatomic, copy) NSString *zoneName;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (unsigned long long)allowedRequestCount;
- (bool)appliesToCriteria:(id)arg1;
- (id)bundleID;
- (bool)canTestInClientProcess;
- (id)containerIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)currentRequestWindowIndex;
- (long long)databaseScope;
- (double)delayUntilNextOperationAllowed;
- (id)description;
- (id)dictionaryRepresentation;
- (id)dictionaryRepresentationForJSON:(bool)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)expirationDate;
- (id)functionName;
- (unsigned long long)hash;
- (void)incrementSentRequestCount;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithSqliteRepresentation:(id)arg1;
- (unsigned long long)intervalLengthSeconds;
- (bool)isEqual:(id)arg1;
- (bool)isExpired;
- (id)label;
- (id)operationGroupNamePrefix;
- (int)operationType;
- (unsigned long long)repeatEverySeconds;
- (id)rowID;
- (unsigned long long)sentRequestCount;
- (id)serviceName;
- (void)setAllowedRequestCount:(unsigned long long)arg1;
- (void)setBundleID:(id)arg1;
- (void)setContainerIdentifier:(id)arg1;
- (void)setCurrentRequestWindowIndex:(unsigned long long)arg1;
- (void)setDatabaseScope:(long long)arg1;
- (void)setExpirationDate:(id)arg1;
- (void)setFunctionName:(id)arg1;
- (void)setIntervalLengthSeconds:(unsigned long long)arg1;
- (void)setLabel:(id)arg1;
- (void)setOperationGroupNamePrefix:(id)arg1;
- (void)setOperationType:(int)arg1;
- (void)setRepeatEverySeconds:(unsigned long long)arg1;
- (void)setRowID:(id)arg1;
- (void)setSentRequestCount:(unsigned long long)arg1;
- (void)setServiceName:(id)arg1;
- (void)setThrottleStartDate:(id)arg1;
- (void)setZoneName:(id)arg1;
- (id)sqliteRepresentation;
- (id)throttleBlockingUntilNextRequestWindow;
- (id)throttleStartDate;
- (id)zoneName;

@end
