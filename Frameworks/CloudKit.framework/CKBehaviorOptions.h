/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@interface CKBehaviorOptions : NSObject {
    NSString * _automatedDeviceGroup;
    NSUserDefaults * _automatedDeviceGroupDefaults;
    bool  _didReadAutomatedDeviceGroup;
}

@property (nonatomic, retain) NSString *automatedDeviceGroup;
@property bool didReadAutomatedDeviceGroup;

+ (id)sharedOptions;

- (void).cxx_destruct;
- (bool)CFNetworkLogging;
- (const char *)CKCtlPrompt;
- (double)PCSCacheMinTime;
- (unsigned long long)PCSCacheSize;
- (double)PCSCacheValidTime;
- (int)PCSRetryCount;
- (id)_getDictionaryOptionForKey:(id)arg1 defaultValue:(id)arg2;
- (id)_init;
- (void)_setArrayPref:(id)arg1 forKey:(id)arg2;
- (void)_setPref:(id)arg1 forKey:(id)arg2;
- (bool)allowExpiredDNSBehavior;
- (bool)allowKeyRollingInAllContainers;
- (unsigned long long)assetEvictionGracePeriodOnHighWatermarkWithDefaultValue:(unsigned long long)arg1;
- (unsigned long long)assetEvictionGracePeriodWithDefaultValue:(unsigned long long)arg1;
- (id)automatedDeviceGroup;
- (int)backgroundSessionConnectionPoolLimitWithDefaultValue:(int)arg1;
- (id)buildVersion;
- (int)cachedRecordExpiryTime;
- (int)clientThrottleQueueWidth;
- (bool)compressRequests;
- (id)configBaseURL;
- (id)containerIdentifierToForceFatalManateeZoneDecryptionFailure;
- (id)customCloudDBBaseURL;
- (id)customCodeServiceBaseURL;
- (id)customDeviceServiceBaseURL;
- (id)customMetricsServiceBaseURL;
- (id)customShareServiceBaseURL;
- (void)dealloc;
- (int)defaultRetryAfter;
- (id)deviceCountOverride;
- (bool)didReadAutomatedDeviceGroup;
- (bool)disableCaching;
- (bool)enableMMCSMetricsWithDefaultValue:(bool)arg1;
- (bool)evictRecentAssets;
- (bool)fakeManateeEnabled;
- (bool)fakeManateeOverride;
- (long long)flowControlBudget;
- (long long)flowControlBudgetOverride;
- (double)flowControlRegeneration;
- (double)flowControlRegenerationOverride;
- (bool)isAppleInternalInstall;
- (bool)logTraffic;
- (int)longlivedOperationMaxRetryCount;
- (unsigned long long)maxBatchSize;
- (unsigned long long)maxPackageDownloadsPerBatchWithDefaultValue:(unsigned long long)arg1;
- (unsigned long long)maxPackageUploadsPerBatchWithDefaultValue:(unsigned long long)arg1;
- (long long)maxRecordPCSMasterKeyRolls;
- (double)maximumQueuedFetchWaitTime;
- (double)maximumThrottleSeconds;
- (double)minTTRPromptInterval;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (double)packageGCPeriod;
- (bool)pipelineFetchAllChangesRequests;
- (id)productName;
- (id)productVersion;
- (double)publicIdentitiesExpirationTimeout;
- (unsigned long long)recordCacheSizeLimit;
- (id)recordNamesForFakingDecryptionFailure;
- (bool)rollRecordMasterKeysOnUnshare;
- (bool)rollRecordPCSMasterKeys;
- (bool)rollZonePCSIdentities;
- (bool)rollZoneSharingKeys;
- (bool)sandboxCloudD;
- (unsigned long long)savedErrorCount;
- (bool)sendDebugHeader;
- (void)setAllowKeyRollingInAllContainers:(bool)arg1;
- (void)setAutomatedDeviceGroup:(id)arg1;
- (void)setContainerIdentifierToForceFatalManateeZoneDecryptionFailure:(id)arg1;
- (void)setDeviceCountOverride:(id)arg1;
- (void)setDidReadAutomatedDeviceGroup:(bool)arg1;
- (void)setForceUploadRequestActivitiesToRunImmediately:(bool)arg1;
- (void)setIgnoreUploadRequestPushNotifications:(bool)arg1;
- (void)setPCSCacheValidTime:(long long)arg1;
- (void)setRecordNamesForFakingDecryptionFailure:(id)arg1;
- (void)setShareURLToAccountIDSystemAcceptationOverrides:(id)arg1;
- (void)setUsePreauth:(bool)arg1;
- (id)setupBaseURL;
- (double)shareAcceptorRetrievingDialogDelay;
- (double)shareAcceptorRetrievingDialogMinPeriod;
- (id)shareURLToAccountIDSystemAcceptationOverrides;
- (bool)shouldDecryptRecordsBeforeSave;
- (bool)shouldProfileSQL;
- (long long)sqlBatchCount;
- (double)sqlBatchTime;
- (id)testRunIDHeader;
- (id)transcoderFunctionName;
- (id)transcoderPermittedRemoteMeasurement;
- (id)transcoderServiceName;
- (bool)useEncryption;
- (bool)useEnhancedPCSEncryptionContext;
- (bool)useModTimeInAssetCacheEviction;
- (bool)usePreauth;
- (id)vettedEmailsTestFormat;
- (int)xpcConnectionTimeoutSecondsWithDefaultValue:(int)arg1;

@end
