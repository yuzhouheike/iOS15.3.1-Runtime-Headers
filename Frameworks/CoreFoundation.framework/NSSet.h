/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@interface NSSet : NSObject <CARPFObject, NSCopying, NSFastEnumeration, NSMutableCopying, NSSecureCoding, PQLBindable>

@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (getter=carpf_isEmpty, readonly) bool carpf_empty;
@property (readonly, copy) NSString *carpf_privateDescription;
@property (readonly, copy) NSString *carpf_shortDescription;
@property (readonly) unsigned long long count;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly) Class superclass;

// Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)newSetWithObjects:(const id*)arg1 count:(unsigned long long)arg2;
+ (id)set;
+ (id)setWithArray:(id)arg1;
+ (id)setWithArray:(id)arg1 copyItems:(bool)arg2;
+ (id)setWithArray:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
+ (id)setWithArray:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 copyItems:(bool)arg3;
+ (id)setWithObject:(id)arg1;
+ (id)setWithObjects:(id)arg1;
+ (id)setWithObjects:(const id*)arg1 count:(unsigned long long)arg2;
+ (id)setWithOrderedSet:(id)arg1;
+ (id)setWithOrderedSet:(id)arg1 copyItems:(bool)arg2;
+ (id)setWithOrderedSet:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
+ (id)setWithOrderedSet:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 copyItems:(bool)arg3;
+ (id)setWithSet:(id)arg1;
+ (id)setWithSet:(id)arg1 copyItems:(bool)arg2;
+ (bool)supportsSecureCoding;

- (void)__applyValues:(int (*)arg1 context:(void*)arg2;
- (bool)__getValue:(id*)arg1 forObj:(id)arg2;
- (unsigned long long)_cfTypeID;
- (id)allObjects;
- (id)anyObject;
- (bool)containsObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)count;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x1; id *x2; unsigned long long *x3; unsigned long long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3;
- (unsigned long long)countForObject:(id)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateObjectsUsingBlock:(id /* block */)arg1;
- (void)enumerateObjectsWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (void)getObjects:(id*)arg1;
- (void)getObjects:(id*)arg1 count:(unsigned long long)arg2;
- (void)getObjects:(id*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (unsigned long long)hash;
- (id)initWithArray:(id)arg1;
- (id)initWithArray:(id)arg1 copyItems:(bool)arg2;
- (id)initWithArray:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)initWithArray:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 copyItems:(bool)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (id)initWithObjects:(id)arg1;
- (id)initWithObjects:(const id*)arg1 count:(unsigned long long)arg2;
- (id)initWithOrderedSet:(id)arg1;
- (id)initWithOrderedSet:(id)arg1 copyItems:(bool)arg2;
- (id)initWithOrderedSet:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)initWithOrderedSet:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 copyItems:(bool)arg3;
- (id)initWithSet:(id)arg1;
- (id)initWithSet:(id)arg1 copyItems:(bool)arg2;
- (bool)intersectsOrderedSet:(id)arg1;
- (bool)intersectsSet:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToSet:(id)arg1;
- (bool)isNSSet__;
- (bool)isSubsetOfOrderedSet:(id)arg1;
- (bool)isSubsetOfSet:(id)arg1;
- (void)makeObjectsPerformSelector:(SEL)arg1;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (id)member:(id)arg1;
- (id)members:(id)arg1 notFoundMarker:(id)arg2;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)objectEnumerator;
- (id)objectPassingTest:(id /* block */)arg1;
- (id)objectWithOptions:(unsigned long long)arg1 passingTest:(id /* block */)arg2;
- (id)objectsPassingTest:(id /* block */)arg1;
- (id)objectsWithOptions:(unsigned long long)arg1 passingTest:(id /* block */)arg2;
- (id)setByAddingObject:(id)arg1;
- (id)setByAddingObjectsFromArray:(id)arg1;
- (id)setByAddingObjectsFromSet:(id)arg1;
- (id)sortedArrayUsingComparator:(id /* block */)arg1;
- (id)sortedArrayWithOptions:(unsigned long long)arg1 usingComparator:(id /* block */)arg2;

// Image: /System/Library/Frameworks/Accounts.framework/Accounts

+ (id)setWithTrackedSet:(id)arg1;

- (id)ac_map:(id /* block */)arg1;
- (id)ac_mapNullable:(id /* block */)arg1;
- (id)initWithTrackedSet:(id)arg1;

// Image: /System/Library/Frameworks/ClassKit.framework/ClassKit

+ (id)setWithUnionOfSets:(id)arg1;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

- (void)CKAssignToContainerWithID:(id)arg1;
- (id)CKMap:(id /* block */)arg1;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (bool)_subclassesMustBeExplicitlyMentionedWhenDecoded;
+ (bool)supportsSecureCoding;

- (id)_avgForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)filteredSetUsingPredicate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)sortedArrayUsingDescriptors:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;

// Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore

- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities

- (id)ax_filteredSetUsingBlock:(id /* block */)arg1;
- (id)ax_flatMappedSetUsingBlock:(id /* block */)arg1;
- (id)ax_mappedSetUsingBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount

- (id)aa_setByRemovingObject:(id)arg1;
- (id)aa_setByRemovingObjectsFromSet:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices

+ (id)ams_JSONClasses;
+ (id)ams_PLISTClasses;

- (id)ams_filterUsingTest:(id /* block */)arg1;
- (id)ams_firstObjectPassingTest:(id /* block */)arg1;
- (id)ams_mapWithTransform:(id /* block */)arg1;
- (id)ams_nonEmptyComponentsJoinedByString:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

- (id)af_lenientMappedDictionary:(id /* block */)arg1;
- (id)af_mappedSet:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard

- (id)bs_compactMap:(id /* block */)arg1;
- (bool)bs_containsObjectPassingTest:(id /* block */)arg1;
- (id)bs_dictionaryByPartitioning:(id /* block */)arg1;
- (void)bs_each:(id /* block */)arg1;
- (id)bs_filter:(id /* block */)arg1;
- (id)bs_firstObjectPassingTest:(id /* block */)arg1;
- (id)bs_map:(id /* block */)arg1;
- (id)bs_reduce:(id)arg1 block:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/CARPFoundation.framework/CARPFoundation

+ (id)carpf_shortDescription;

- (id)carpf_addedObjectsFromSet:(id)arg1;
- (id)carpf_commonObjectsFromSet:(id)arg1;
- (bool)carpf_isEmpty;
- (id)carpf_privateDescription;
- (id)carpf_removedObjectsFromSet:(id)arg1;
- (id)carpf_shortDescription;

// Image: /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation

- (bool)_cn_any:(id /* block */)arg1;
- (id)_cn_filter:(id /* block */)arg1;
- (id)_cn_firstObjectPassingTest:(id /* block */)arg1;
- (id)_cn_indexBy:(id /* block */)arg1;
- (id)_cn_map:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation

- (id)__imDeepCopy;
- (void)__imForEach:(id /* block */)arg1;
- (id)__imSetByApplyingBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/IntentsFoundation.framework/IntentsFoundation

- (id)if_compactMap:(id /* block */)arg1;
- (id)if_map:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote

- (bool)mr_containsObjectUsingWeakMatching:(id)arg1;

// Image: /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices

- (id)msv_compactMap:(id /* block */)arg1;
- (id)msv_filter:(id /* block */)arg1;
- (id)msv_firstWhere:(id /* block */)arg1;
- (id)msv_flatMap:(id /* block */)arg1;
- (id)msv_map:(id /* block */)arg1;
- (bool)msv_reduceIntoBool:(bool)arg1 by:(id /* block */)arg2;
- (double)msv_reduceIntoCGFloat:(double)arg1 by:(id /* block */)arg2;
- (double)msv_reduceIntoDouble:(double)arg1 by:(id /* block */)arg2;
- (float)msv_reduceIntoFloat:(float)arg1 by:(id /* block */)arg2;
- (int)msv_reduceIntoInt32:(int)arg1 by:(id /* block */)arg2;
- (long long)msv_reduceIntoInt64:(long long)arg1 by:(id /* block */)arg2;
- (long long)msv_reduceIntoInt:(long long)arg1 by:(id /* block */)arg2;
- (id)msv_reduceIntoObject:(id)arg1 by:(id /* block */)arg2;
- (unsigned int)msv_reduceIntoUInt32:(unsigned int)arg1 by:(id /* block */)arg2;
- (unsigned long long)msv_reduceIntoUInt64:(unsigned long long)arg1 by:(id /* block */)arg2;
- (unsigned long long)msv_reduceIntoUInt:(unsigned long long)arg1 by:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport

- (id)_pas_filteredSetWithTest:(id /* block */)arg1;
- (id)_pas_mappedSetWithTransform:(id /* block */)arg1;

// Image: /usr/lib/libprequelite.dylib

- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;

@end
