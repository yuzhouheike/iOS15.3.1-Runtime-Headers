/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@interface NSURL : NSObject <AFSecurityDigestibleChunksProviding, CKXPCSuitableString, DebugHierarchyValue_Fallback, INJSONSerializable, NSCopying, NSItemProviderReading, NSItemProviderWriting, NSSecureCoding, PQLValuable, SFJSONSerializable, UIItemProviderReading, UIItemProviderWriting, _AFBundleResourceURLProviding> {
    NSURL * _baseURL;
    void * _clients;
    void * _reserved;
    NSString * _urlString;
}

@property (readonly, copy) NSURL *URLByDeletingLastPathComponent;
@property (readonly, copy) NSURL *URLByDeletingPathExtension;
@property (readonly, copy) NSURL *URLByResolvingSymlinksInPath;
@property (readonly, copy) NSURL *URLByStandardizingPath;
@property (getter=_pb_isDirectory, nonatomic, readonly) bool _pb_directory;
@property (getter=_pb_isFileProvider, nonatomic, readonly) bool _pb_isFileProvider;
@property (setter=_setTitle:, nonatomic, copy) NSString *_title;
@property (readonly, copy) NSString *aa_endpoint;
@property (readonly, copy) NSString *absoluteString;
@property (readonly, copy) NSURL *absoluteURL;
@property (nonatomic, readonly) NSDictionary *ams_parameters;
@property (nonatomic, readonly) NSDictionary *ams_unmodifiedParameters;
@property (readonly, copy) NSURL *baseURL;
@property (nonatomic, readonly) NSString *br_lastEditorDeviceName;
@property (nonatomic, readonly) NSString *br_lastEditorName;
@property (nonatomic, readonly) NSPersonNameComponents *br_lastEditorNameComponents;
@property (nonatomic, readonly) bool cls_fileExists;
@property (nonatomic, readonly) bool cls_isUbiquitous;
@property (nonatomic, readonly) bool cls_isUploaded;
@property (readonly, copy) NSData *dataRepresentation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSDictionary *dictionaryRepresentation;
@property (readonly, copy) NSURL *filePathURL;
@property (readonly) const char *fileSystemRepresentation;
@property (getter=isFileURL, readonly) bool fileURL;
@property (readonly, copy) NSString *fragment;
@property (readonly) bool hasDirectoryPath;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSString *host;
@property (getter=isiWorkURL, readonly) bool iWorkURL;
@property (nonatomic, readonly) NSData *jsonData;
@property (readonly, copy) NSString *lastPathComponent;
@property (setter=ls_setPreferredLocalizations:, retain) NSArray *ls_preferredLocalizations;
@property (nonatomic, readonly) NSURL *normalizedURL;
@property (readonly, copy) NSString *parameterString;
@property (readonly, copy) NSString *password;
@property (readonly, copy) NSString *path;
@property (readonly, copy) NSArray *pathComponents;
@property (readonly, copy) NSString *pathExtension;
@property (readonly, copy) NSNumber *port;
@property (readonly, copy) NSString *query;
@property (readonly, copy) NSString *relativePath;
@property (readonly, copy) NSString *relativeString;
@property (readonly, copy) NSString *resourceSpecifier;
@property (readonly, copy) NSString *scheme;
@property (readonly, copy) NSURL *standardizedURL;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *user;
@property (nonatomic, readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;

// Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

+ (id)__unurl;
+ (id)bookmarkDataWithContentsOfURL:(id)arg1 error:(id*)arg2;
+ (id)resourceValuesForKeys:(id)arg1 fromBookmarkData:(id)arg2;
+ (bool)supportsSecureCoding;
+ (bool)writeBookmarkData:(id)arg1 toURL:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4;

- (id)bookmarkDataWithOptions:(unsigned long long)arg1 includingResourceValuesForKeys:(id)arg2 relativeToURL:(id)arg3 error:(id*)arg4;
- (bool)checkResourceIsReachableAndReturnError:(id*)arg1;
- (id)filePathURL;
- (id)fileReferenceURL;
- (bool)getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (bool)isFileReferenceURL;
- (void)removeAllCachedResourceValues;
- (void)removeCachedResourceValueForKey:(id)arg1;
- (id)resourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (bool)setResourceValue:(id)arg1 forKey:(id)arg2 error:(id*)arg3;
- (bool)setResourceValues:(id)arg1 error:(id*)arg2;
- (void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2;
- (bool)startAccessingSecurityScopedResource;
- (void)stopAccessingSecurityScopedResource;

// Image: /Developer/Library/PrivateFrameworks/DTDDISupport.framework/libViewDebuggerSupport.dylib

- (id)fallback_debugHierarchyValueWithOutOptions:(id*)arg1 outError:(id*)arg2;

// Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork

- (bool)_isSafeDirectoryForDownloads:(int)arg1 withToken:(struct { unsigned int x1[8]; })arg2;
- (bool)_isSafeFileForBackgroundUpload:(int)arg1 withToken:(struct { unsigned int x1[8]; })arg2;
- (bool)_isSafeFileForBackgroundUploadForMe;

// Image: /System/Library/Frameworks/ClassKit.framework/ClassKit

+ (id)cls_configURL;
+ (void)cls_deleteFileAtExpectedURL:(id)arg1 containerURL:(id)arg2 itemID:(id)arg3 ownerName:(id)arg4 zoneName:(id)arg5 completion:(id /* block */)arg6;
+ (bool)cls_deleteFileAtURL:(id)arg1 error:(id*)arg2;
+ (id)cls_documentsURL;
+ (id)cls_documentsURLAndReturnError:(id*)arg1;
+ (id)cls_draftsURL;
+ (id)cls_draftsURLAndReturnError:(id*)arg1;
+ (void)cls_getUbiquitousContainerURLWithCompletion:(id /* block */)arg1;
+ (id)cls_libraryURL;
+ (id)cls_ubiquitousContainerURL;
+ (id)cls_ubiquitousContainerURL_Imp:(id*)arg1;
+ (void)cls_urlSuitableForOpeningForExpectedURL:(id)arg1 containerURL:(id)arg2 itemID:(id)arg3 ownerName:(id)arg4 zoneName:(id)arg5 completion:(id /* block */)arg6;

- (unsigned long long)_cls_stableHash;
- (void)cls_checkForCKShareWithCompletion:(id /* block */)arg1;
- (id)cls_createDirectoryIfNeeded:(id*)arg1;
- (void)cls_createShareIfNeededWithOrgAdminUserRecordID:(id)arg1 userRecordID:(id)arg2 completion:(id /* block */)arg3;
- (bool)cls_fileExists;
- (bool)cls_isParentOfURL:(id)arg1;
- (bool)cls_isUbiquitous;
- (bool)cls_isUploaded;
- (id)cls_pathRelativeToURL:(id)arg1;
- (void)cls_performWithSandboxAccess:(id /* block */)arg1;
- (void)cls_removeCachedResourceValueForKeys:(id)arg1;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

- (id)CKBladerunnerShareURLSlugBasedApplicationBundleID;
- (id)CKPathAfterSlug;
- (id)CKSanitizedPath;
- (id)CKShareURLSlugBasedApplicationName;
- (id)CKURLSlug;
- (id)CKURLThroughSlug;
- (id)CKXPCSuitableString;
- (void)ck_bindInStatement:(id)arg1 atIndex:(unsigned long long)arg2;

// Image: /System/Library/Frameworks/CoreML.framework/CoreML

+ (id)uniqueDirectoryURLInPath:(id)arg1;

- (bool)removeItemAndReturnError:(id*)arg1;

// Image: /System/Library/Frameworks/CoreServices.framework/CoreServices

- (bool)conformsToOverridePatternWithKey:(id)arg1;
- (id)fmfURL;
- (id)fmipURL;
- (id)iCloudEmailPrefsURL;
- (id)iCloudSharingURL;
- (id)iCloudSharingURL_noFragment;
- (id)iTunesStoreURL;
- (id)iWorkApplicationName;
- (id)iWorkDocumentName;
- (bool)isiWorkURL;
- (id)keynoteLiveURL;
- (id)keynoteLiveURL_noFragment;
- (id)ls_preferredLocalizations;
- (void)ls_setPreferredLocalizations:(id)arg1;
- (id)mapsURL;
- (id)photosURL;

// Image: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight

- (bool)cs_addDocumentTracking;
- (bool)cs_isInMobileDocuments;

// Image: /System/Library/Frameworks/FileProvider.framework/FileProvider

+ (void)_fp_createInTempDirectoryWithName:(id)arg1 creationBlock:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (id)fp_containerDirectoryForDataSeparatedPersonaWithPurposeIdentifier:(id)arg1;
+ (void)fp_createEmptyTempFileWithName:(id)arg1 completion:(id /* block */)arg2;
+ (void)fp_createEmptyTempPackageWithName:(id)arg1 completion:(id /* block */)arg2;
+ (id)fp_homeDirectory;
+ (id)fp_homeDirectoryForUserID:(unsigned int)arg1;
+ (id)fp_homeDirectoryPathForUserID:(unsigned int)arg1;
+ (id)fp_personaCloudStorageDirectory;
+ (id)fp_personaHomeDirectory;
+ (id)fp_personaHomeDirectoryPathForUserID:(unsigned int)arg1;
+ (id)fp_supportDirectory;
+ (id)fp_tempDirectory;
+ (id)fp_uniqueTempFolderWithError:(id*)arg1;

- (id)_fp_componentsRelativeToRoot:(id)arg1;
- (id)_fp_lookupURLOfChildWithName:(id)arg1 notMatchingFileID:(id)arg2;
- (bool)_fp_partOfAppInboxWithURLComponents:(id)arg1;
- (id)_fp_scanForURLOfChildWithName:(id)arg1 notMatchingFileID:(id)arg2 maximumBounceNumber:(id*)arg3;
- (id)fp_addDocumentTrackingWithError:(id*)arg1;
- (bool)fp_associateThumbnailFromDocumentAtURL:(id)arg1 error:(id*)arg2;
- (void)fp_attachSecurityScopeFromURL:(id)arg1;
- (bool)fp_checkSandboxFileMetadataRead;
- (id)fp_commonDirectDescendantOf:(id)arg1;
- (void)fp_coordinatedDeleteWithHandler:(id /* block */)arg1;
- (id)fp_copyToTempFolderWithFilename:(id)arg1 queue:(id)arg2 precomputedItemSize:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (id)fp_copyToURL:(id)arg1 queue:(id)arg2 precomputedItemSize:(unsigned long long)arg3 replacePlaceholder:(bool)arg4 completion:(id /* block */)arg5;
- (bool)fp_createSubFolder:(id)arg1 completionHandler:(id /* block */)arg2;
- (id /* block */)fp_defaultMoverBlock;
- (bool)fp_deleteAllowingCoordination:(bool)arg1 completionHandler:(id /* block */)arg2;
- (bool)fp_deleteWithCompletionHandler:(id /* block */)arg1;
- (id)fp_directorySizeWithError:(id*)arg1;
- (id)fp_existingURLOfChildWithName:(id)arg1;
- (id)fp_existingURLOfChildWithName:(id)arg1 notMatchingFileID:(id)arg2 maximumBounceNumber:(id*)arg3 forceFetchingBounceNumber:(bool)arg4;
- (id)fp_fpfsRootURL;
- (bool)fp_getSize:(unsigned long long*)arg1 error:(id*)arg2;
- (void)fp_hideExtension:(bool)arg1;
- (bool)fp_importUnderFolder:(id)arg1 allowCoordination:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)fp_importUnderFolder:(id)arg1 allowCoordination:(bool)arg2 usingBlock:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (bool)fp_importUnderFolder:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)fp_importUnderFolder:(id)arg1 usingBlock:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
- (bool)fp_isAppInboxOrDescendants;
- (id)fp_isDatalessWithError:(id*)arg1;
- (bool)fp_isFolder;
- (bool)fp_isInSyncableRootFast;
- (bool)fp_isPackage;
- (bool)fp_isSymlink;
- (id)fp_issueSandboxExtensionOfClass:(const char *)arg1 report:(bool)arg2 error:(id*)arg3;
- (void)fp_makeWritableAndRemoveNonExportableAttributes;
- (bool)fp_makeWritableOnFD:(int)arg1 error:(id*)arg2;
- (bool)fp_makeWritableWithError:(id*)arg1;
- (bool)fp_matchesAlternateContentsURL:(id)arg1;
- (bool)fp_matchesApplicationContainerURL:(id)arg1;
- (bool)fp_matchesCloudDocsURL:(id)arg1;
- (bool)fp_matchesEDSLocation;
- (bool)fp_matchesFPFSURL:(id)arg1;
- (bool)fp_matchesFileProviderHeuristics:(unsigned int)arg1;
- (bool)fp_matchesFileProviderURL:(id)arg1;
- (bool)fp_matchesLiveFilesURL:(id)arg1;
- (id)fp_matchesUbiquitousHeuristics;
- (id)fp_moveToTempFolderWithFilename:(id)arg1 error:(id*)arg2;
- (bool)fp_moveUnderFolder:(id)arg1 withNewName:(id)arg2 allowBounce:(bool)arg3 allowCoordination:(bool)arg4 completionHandler:(id /* block */)arg5;
- (bool)fp_moveUnderFolder:(id)arg1 withNewName:(id)arg2 allowBounce:(bool)arg3 allowCoordination:(bool)arg4 moveHandler:(id /* block */)arg5 completionHandler:(id /* block */)arg6;
- (bool)fp_moveUnderFolder:(id)arg1 withNewName:(id)arg2 coordinationOptions:(unsigned long long)arg3 allowBounce:(bool)arg4 allowCoordination:(bool)arg5 completionHandler:(id /* block */)arg6;
- (bool)fp_moveUnderFolder:(id)arg1 withNewName:(id)arg2 coordinationOptions:(unsigned long long)arg3 allowBounce:(bool)arg4 allowCoordination:(bool)arg5 moveHandler:(id /* block */)arg6 completionHandler:(id /* block */)arg7;
- (id)fp_physicalURL;
- (id)fp_realpathURL;
- (long long)fp_relationshipToItemAtURL:(id)arg1;
- (id)fp_relativePathOf:(id)arg1;
- (id)fp_relativePathWithRealpath:(id)arg1;
- (bool)fp_removeACLWithError:(id*)arg1;
- (bool)fp_removeFileProviderXattrsWithError:(id*)arg1;
- (bool)fp_renameWithNewName:(id)arg1 allowCoordination:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)fp_renameWithNewName:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)fp_reparentUnderFolder:(id)arg1 allowBouncing:(bool)arg2 allowCoordination:(bool)arg3 completionHandler:(id /* block */)arg4;
- (bool)fp_reparentUnderFolder:(id)arg1 allowBouncing:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)fp_reparentUnderFolder:(id)arg1 allowCoordination:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)fp_reparentUnderFolder:(id)arg1 withNewName:(id)arg2 allowCoordination:(bool)arg3 completionHandler:(id /* block */)arg4;
- (bool)fp_reparentUnderFolder:(id)arg1 withNewName:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)fp_scopeDescription;
- (id)fp_shortDescription;
- (bool)fp_trashUnderFolder:(id)arg1 allowCoordination:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)fp_trashUnderFolder:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)fp_withReadWriteAccess:(id /* block */)arg1;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)URLByResolvingAliasFileAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
+ (id)URLByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(bool*)arg4 error:(id*)arg5;
+ (id)URLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
+ (id)URLWithString:(id)arg1;
+ (id)URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_fileURLWithPath:(id)arg1 cachingResourceValuesForKeys:(id)arg2 error:(id*)arg3;
+ (id)_web_URLWithComponents:(struct { id x1; id x2; id x3; id x4; long long x5; id x6; id x7; id x8; })arg1;
+ (id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)absoluteURLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)fileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(bool)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(bool)arg2;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(bool)arg2 relativeToURL:(id)arg3;
+ (id)fileURLWithPath:(id)arg1 relativeToURL:(id)arg2;
+ (id)fileURLWithPathComponents:(id)arg1;
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id*)arg3;
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)writableTypeIdentifiersForItemProvider;

- (id)URLByAppendingPathComponent:(id)arg1;
- (id)URLByAppendingPathComponent:(id)arg1 isDirectory:(bool)arg2;
- (id)URLByAppendingPathExtension:(id)arg1;
- (id)URLByDeletingLastPathComponent;
- (id)URLByDeletingPathExtension;
- (id)URLByResolvingSymlinksInPath;
- (id)URLByStandardizingPath;
- (id)_URLArchive;
- (id)_URLByEscapingSpacesAndControlChars;
- (unsigned long long)_cfTypeID;
- (struct __CFURL { }*)_cfurl;
- (struct __CFDictionary { }*)_clientsCreatingIfNecessary:(bool)arg1;
- (id)_fixedUpSideFaultError:(id)arg1;
- (void)_freeClients;
- (id)_hostString;
- (id)_initFileURLWithPath:(id)arg1 cachingResourceValuesForKeys:(id)arg2 error:(id*)arg3;
- (bool)_isAbsolute;
- (bool)_isDeallocating;
- (void)_performWithPhysicalURL:(id /* block */)arg1;
- (long long)_promiseExtensionConsume;
- (void)_promiseExtensionRelease:(long long)arg1;
- (bool)_tryRetain;
- (id)_valueFromFaultDictionary:(id)arg1 forKey:(id)arg2;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (struct { id x1; id x2; id x3; id x4; long long x5; id x6; id x7; id x8; })_web_URLComponents;
- (bool)_web_isJavaScriptURL;
- (id)_web_scriptIfJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)arg1;
- (id)absoluteString;
- (id)absoluteURL;
- (id)baseURL;
- (bool)checkPromisedItemIsReachableAndReturnError:(id*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataRepresentation;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (const char *)fileSystemRepresentation;
- (id)fragment;
- (bool)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;
- (bool)getPromisedItemResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (bool)hasDirectoryPath;
- (unsigned long long)hash;
- (id)host;
- (id)init;
- (id)initAbsoluteURLWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
- (id)initByResolvingAliasFileAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (id)initByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(bool*)arg4 error:(id*)arg5;
- (id)initFileURLWithFileSystemRepresentation:(const char *)arg1 isDirectory:(bool)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(bool)arg2;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(bool)arg2 relativeToURL:(id)arg3;
- (id)initFileURLWithPath:(id)arg1 relativeToURL:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataRepresentation:(id)arg1 relativeToURL:(id)arg2;
- (id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 relativeToURL:(id)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isFileURL;
- (bool)isKindOfClass:(Class)arg1;
- (bool)isMemberOfClass:(Class)arg1;
- (id)lastPathComponent;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(id /* block */)arg2;
- (id)parameterString;
- (id)password;
- (id)path;
- (id)pathComponents;
- (id)pathExtension;
- (id)port;
- (id)promisedItemResourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (id)query;
- (id)relativePath;
- (id)relativeString;
- (oneway void)release;
- (id)resourceSpecifier;
- (id)retain;
- (unsigned long long)retainCount;
- (id)scheme;
- (id)standardizedURL;
- (id)user;
- (id)writableTypeIdentifiersForItemProvider;

// Image: /System/Library/Frameworks/Intents.framework/Intents

+ (id)_intents_decodeWithJSONDecoder:(id)arg1 codableDescription:(id)arg2 from:(id)arg3;

- (id)_intents_encodeWithJSONEncoder:(id)arg1 codableDescription:(id)arg2;

// Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore

- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)arg1;

// Image: /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing

+ (id)_QLCreateTemporaryReplacementURLForOriginalFileAtURL:(id)arg1 withExtension:(id)arg2 temporaryDirectoryURL:(id*)arg3;
+ (id)_QLTemporaryURLWithExtension:(id)arg1 openingFileHandle:(int*)arg2 inDirectoryAtURL:(id)arg3;

- (id)_QLFileSize;
- (id)_QLIssueFileExtensionWithSandboxType:(const char *)arg1;
- (bool)_QLNeedsCoordination;
- (bool)_QLNeedsDownload;
- (id)_QLUrlFileSize;
- (id)ql_realpathURL;

// Image: /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers

- (id)URLByAppendingPathComponent:(id)arg1 conformingToType:(id)arg2;
- (id)URLByAppendingPathExtensionForType:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount

+ (id)aa_URLWithEndpoint:(id)arg1;

- (id)aa_endpoint;

// Image: /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices

+ (bool)_isAppendWithUnmodifiedParametersFeatureFlagEnabled;
+ (id)ams_cachesDirectory;
+ (id)ams_engagementDirectory;
+ (id)ams_realHomeDirectory;
+ (id)ams_unescapedStringForString:(id)arg1;

- (id)_ams_URLWithSortedParameters:(id)arg1;
- (id)_sortedQueryStringFromParameters:(id)arg1;
- (id)ams_URLByAppendingQueryParameter:(id)arg1 name:(id)arg2;
- (id)ams_URLByAppendingQueryParameters:(id)arg1;
- (id)ams_URLByDeletingTrailingSlash;
- (id)ams_URLByReplaceingQueryParameters:(id)arg1;
- (id)ams_URLByReplaceingQueryParameters:(id)arg1 withEncodedParameters:(bool)arg2;
- (id)ams_URLByReplacingSchemeWithScheme:(id)arg1;
- (id)ams_URLBySortingQueryParameters;
- (id)ams_URLQueryAllowedCharacterSet;
- (id)ams_parameters;
- (id)ams_schemeSwizzledURL;
- (id)ams_unmodifiedParameters;
- (id)ams_valueForQueryParameter:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

+ (id)_af_URLWithMessageIdentifier:(id)arg1;

- (id)_af_messageIdentifierValue;
- (void)af_enumerateDigestibleChunksWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (id)af_getBundleResourceURL;
- (bool)isAMOSCommittedIdentifier;
- (bool)isAMOSIdentifier;

// Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs

+ (void)br_containerIDsWithExternalReferencesTo:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)br_documentURLFromBookmarkableString:(id)arg1 completion:(id /* block */)arg2;
+ (id)br_documentURLFromBookmarkableString:(id)arg1 error:(id*)arg2;
+ (id)br_documentURLFromFileObjectID:(id)arg1 error:(id*)arg2;
+ (id)brc_fileURLWithFileDescriptor:(int)arg1;
+ (id)brc_fileURLWithVolumeDeviceID:(id)arg1 fileID:(id)arg2 isDirectory:(bool)arg3;

- (bool)_br_isInLocalHomeDirectoryUnderCurrentPersona;
- (bool)_br_isInLocalHomeDirectoryUnderPersona:(id)arg1 needsPersonaSwitch:(bool)arg2;
- (bool)_br_isInPersonaRoot:(id)arg1;
- (bool)_br_isInSyncedLocationStrictly:(bool)arg1;
- (bool)_br_isInSyncedLocationWithCurrentPersonaID:(id)arg1 strictly:(bool)arg2 foundHomeDirectory:(bool)arg3 adoptionError:(id)arg4;
- (id)br_URLByResolvingExternalDocumentReferenceWithError:(id*)arg1;
- (id)br_URLByResolvingInProcessExternalDocumentReferenceWithProperties:(id)arg1;
- (id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 error:(id*)arg3;
- (id)br_addFakeConflictLoserFromItemAtURL:(id)arg1 lastEditorDeviceName:(id)arg2 lastEditorUserName:(id)arg3 error:(id*)arg4;
- (void)br_addPhysicalProperty;
- (void)br_bookmarkableStringForRemoteOpeningAppWithBundleID:(id)arg1 completion:(id /* block */)arg2;
- (void)br_bookmarkableStringWithEtag:(bool)arg1 completion:(id /* block */)arg2;
- (void)br_bookmarkableStringWithEtag:(bool)arg1 onlyAllowItemKnowByServer:(bool)arg2 completion:(id /* block */)arg3;
- (id)br_cachedBookmarkData;
- (unsigned short)br_capabilityToMoveToURL:(id)arg1 error:(id*)arg2;
- (id)br_cloudDocsContainer;
- (id)br_containerID;
- (id)br_containerIDIfIsDesktopOrDocumentsURL;
- (id)br_containerIDIfIsDocumentsContainerURL;
- (id)br_containerIDWithCurrentPersonaID:(id)arg1;
- (id)br_containerIDWithCurrentPersonaID:(id)arg1 needsPersonaSwitch:(bool)arg2;
- (void)br_containerIDsWithExternalReferencesWithHandler:(id /* block */)arg1;
- (id)br_creatorNameComponentsWithError:(id*)arg1;
- (id)br_debugDescription;
- (id)br_documentRecordIDWithError:(id*)arg1;
- (id)br_externalDocumentPropertiesWithError:(id*)arg1;
- (bool)br_getTagNames:(id*)arg1 error:(id*)arg2;
- (void)br_isConflictedWithHandler:(id /* block */)arg1;
- (bool)br_isDocumentsContainer;
- (bool)br_isExternalDocumentReference;
- (bool)br_isInCloudDocsPrivateStorages;
- (bool)br_isInCloudDocsPrivateStoragesForRemoteDocumentVersions;
- (bool)br_isInLocalHomeDirectory;
- (bool)br_isInMobileDocuments;
- (bool)br_isInSharedDocsContainer;
- (bool)br_isInSyncedDesktop;
- (bool)br_isInSyncedDocuments;
- (bool)br_isInSyncedLocation;
- (bool)br_isInTrash;
- (bool)br_isModifiedSinceShared;
- (bool)br_isParentOfURL:(id)arg1;
- (bool)br_isParentOfURL:(id)arg1 strictly:(bool)arg2;
- (bool)br_isPromiseURL;
- (bool)br_isStrictlyInSyncedLocation;
- (bool)br_isSymLink;
- (bool)br_isTopLevelSharedItem;
- (id)br_itemID;
- (id)br_lastEditorDeviceName;
- (id)br_lastEditorName;
- (id)br_lastEditorNameComponents;
- (id)br_logicalURL;
- (bool)br_mightBeBRAlias;
- (id)br_pathRelativeToMobileDocuments;
- (id)br_pathRelativeToSyncedRootURL:(id)arg1 currentPersonaID:(id)arg2;
- (id)br_pathRelativeToSyncedRootURLForContainerID:(id)arg1;
- (id)br_physicalURL;
- (void)br_preCacheBookmarkData:(id)arg1 versionEtag:(id)arg2;
- (id)br_realpathURL;
- (bool)br_setAccessTime:(unsigned long long)arg1 error:(id*)arg2;
- (bool)br_setTagNames:(id)arg1 error:(id*)arg2;
- (id)br_typeIdentifierWithError:(id*)arg1;
- (bool)br_wouldBeExcludedFromSync;
- (id)brc_issueSandboxExtensionOfClass:(const char *)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore

+ (id)_cnui_dialRequestURLWithHandle:(id)arg1 contact:(id)arg2 faceTime:(bool)arg3 video:(bool)arg4 ttyType:(long long)arg5 channelIdentifier:(id)arg6;
+ (id)_cnui_expanseURLFutureWithHandle:(id)arg1;
+ (id)_cnui_expanseURLWithHandle:(id)arg1;
+ (id)_cnui_faceTimeAudioURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_faceTimeAudioURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_faceTimeVideoURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_faceTimeVideoURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_mailURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_mailURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_messagesURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_messagesURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_skypeTextURLFutureWithHandle:(id)arg1;
+ (id)_cnui_skypeTextURLWithHandle:(id)arg1;
+ (id)_cnui_skypeVideoURLFutureWithHandle:(id)arg1;
+ (id)_cnui_skypeVideoURLWithHandle:(id)arg1;
+ (id)_cnui_skypeVoiceURLFutureWithHandle:(id)arg1;
+ (id)_cnui_skypeVoiceURLWithHandle:(id)arg1;
+ (id)_cnui_telephonyURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_telephonyURLFutureWithHandle:(id)arg1 contact:(id)arg2 channelIdentifier:(id)arg3;
+ (id)_cnui_telephonyURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_telephonyURLWithHandle:(id)arg1 contact:(id)arg2 channelIdentifier:(id)arg3;
+ (id)_cnui_ttyRelayURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_ttyRelayURLFutureWithHandle:(id)arg1 contact:(id)arg2 channelIdentifier:(id)arg3;
+ (id)_cnui_ttyRelayURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_ttyRelayURLWithHandle:(id)arg1 contact:(id)arg2 channelIdentifier:(id)arg3;
+ (id)_cnui_ttyURLFutureWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_ttyURLFutureWithHandle:(id)arg1 contact:(id)arg2 channelIdentifier:(id)arg3;
+ (id)_cnui_ttyURLWithHandle:(id)arg1 contact:(id)arg2;
+ (id)_cnui_ttyURLWithHandle:(id)arg1 contact:(id)arg2 channelIdentifier:(id)arg3;
+ (id)_cnui_walletPayURLFutureWithHandle:(id)arg1;
+ (id)_cnui_walletPayURLWithHandle:(id)arg1;
+ (id)log;

// Image: /System/Library/PrivateFrameworks/ExtensionFoundation.framework/ExtensionFoundation

- (id)_EX_containingApplicationBundleURL;
- (bool)_EX_isApplication;
- (bool)_EX_isContainedInDirectory:(id)arg1;
- (bool)_EX_isDirectory;

// Image: /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle

- (id)fa_URLByAddingAirdropInviteParams;
- (id)fa_URLByAddingQueryParams:(id)arg1;

// Image: /System/Library/PrivateFrameworks/GenerationalStorage.framework/GenerationalStorage

- (id)gs_URLByUpdatingPathExtensionWithPathOrURL:(id)arg1;
- (void)gs_chmod:(unsigned short)arg1;
- (id)gs_issueExtension:(const char *)arg1 error:(id*)arg2;
- (id)gs_issueReadExtensionIfNeededForAuditToken:(struct { unsigned int x1[8]; })arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

+ (id)_geo_URLWithString:(id)arg1 tokenSubstitutions:(id)arg2;

// Image: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation

- (id)__imURLByAppendingQueryString:(id)arg1;

// Image: /System/Library/PrivateFrameworks/IconFoundation.framework/IconFoundation

- (id)_IF_attributeModifiedDate;
- (bool)_IF_conformsToUTI:(id)arg1;
- (id)_IF_contentModifiedDate;
- (id)_IF_extendedAttributeForName:(id)arg1;
- (long long)_IF_fileSize;
- (bool)_IF_getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (bool)_IF_isAliasFile;
- (bool)_IF_isBootVolume;
- (bool)_IF_isDirectory;
- (bool)_IF_isOnBootVolume;
- (bool)_IF_isSymLink;
- (bool)_IF_isVolume;
- (id)_IF_modifiedDate;
- (bool)_IF_setExtendedAttribute:(id)arg1 forName:(id)arg2 error:(id*)arg3;
- (id)_IF_typeIdentifier;
- (id)_IF_volumeURL;

// Image: /System/Library/PrivateFrameworks/IconServices.framework/IconServices

+ (bool)__is__isNetBoot;
+ (unsigned int)__is__volumeTypeCodeFromURLProperties:(id)arg1;
+ (id)__is_coreTypesURL;
+ (id)_is_unregisteredPersonlityFileExtensions;

- (id)_IS_dataContainerIconDecoration;
- (id)_IS_dataContainerIconResource;
- (bool)_IS_isDataContainer;
- (bool)__has_ResourceFork;
- (id)__is__attributeModifiedDate;
- (bool)__is__conformsToUTI:(id)arg1;
- (id)__is__contentModifiedDate;
- (bool)__is__getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3;
- (bool)__is__isAliasFile;
- (bool)__is__isDirectory;
- (bool)__is__isPackage;
- (bool)__is__isSymLink;
- (bool)__is__isVolume;
- (id)__is__modifiedDate;
- (unsigned int)__is__volumeTypeCode;
- (unsigned char)__is_accessFlags;
- (id)__is_canonicalURL;
- (bool)__is_fileExists;
- (bool)__is_hasFileExtension:(id)arg1;
- (bool)__is_isAppExtension;
- (bool)__is_isApplication;
- (bool)__is_isBootVolume;
- (bool)__is_isBundleWithUnregisteredPersonality;
- (bool)__is_isOnBootVolume;
- (bool)__is_locked;
- (unsigned int)__is_packageTypeCode;
- (id)__is_resourceValuesForKeys:(id)arg1 error:(id*)arg2;
- (id)__is_typeIdentifier;
- (id)__is_volumeURL;

// Image: /System/Library/PrivateFrameworks/IntentsFoundation.framework/IntentsFoundation

- (bool)if_isContainedByDirectoryAtURL:(id)arg1;

// Image: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration

- (id)normalizedURL;

// Image: /System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation

- (id)MI_URLByAppendingPathComponents:(id)arg1 lastIsDirectory:(bool)arg2;

// Image: /System/Library/PrivateFrameworks/Pasteboard.framework/Pasteboard

- (bool)_pb_isDirectory;
- (bool)_pb_isFileProvider;

// Image: /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation

- (id)dictionaryRepresentation;
- (id)jsonData;

// Image: /System/Library/PrivateFrameworks/Trial.framework/Trial

+ (id)triContainerURLWithPath:(id)arg1 containerId:(id)arg2 containerType:(long long)arg3;
+ (id)triParseURLFromString:(id)arg1;
+ (id)triParseURLFromString:(id)arg1 isDirectory:(bool)arg2;

- (bool)triIsContainerURL;
- (bool)triIsEqual:(id)arg1;
- (id)triPathAsOwner:(bool)arg1;
- (id)triSaveURLToString;
- (id)triURLByResolvingSymlinksInPathIncludingPrivate;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (id)URLWithDisplayIdentifier:(id)arg1 forSearchResultDomain:(int)arg2 andIdentifier:(unsigned long long)arg3;
+ (bool)_allowsCreationOfFileURLFromItemProvider;
+ (void)_setAllowsCreationOfFileURLFromItemProvider:(bool)arg1;
+ (id)mapsURLWithQuery:(id)arg1;
+ (id)mapsURLWithSourceAddress:(id)arg1 destinationAddress:(id)arg2;
+ (id)ui_URLFromExportBookmark:(id)arg1;
+ (id)ui_cloudDocsContainerURL;
+ (id)ui_incomingDirectory:(bool)arg1;

- (id)_NSItemProviderArchive_customArchiveDictionary;
- (void)_NSItemProviderArchive_didUnarchiveCustomDictionary:(id)arg1;
- (void)_domain:(id*)arg1 subdomain:(id*)arg2;
- (void)_setTitle:(id)arg1;
- (id)_title;
- (bool)isAccountURL;
- (bool)isHTTPOrHTTPSURL;
- (bool)isInternalUIKitURL;
- (bool)isJavaScriptURL;
- (bool)isSpringboardHandledURL;
- (bool)isWebcalURL;
- (id)phobosURL;
- (id)radarWebURL;
- (id)searchResultDomain;
- (id)searchResultIdentifier;
- (id)ui_URLByResolvingSymlinksAndCopyingSecurityScope;
- (id)ui_bookmarkForExportWithError:(id*)arg1;
- (bool)ui_canOpenInPlace;
- (id)ui_downloadOperationForActivity:(id)arg1;
- (id)ui_downloadOperationForActivity:(id)arg1 inScene:(id)arg2;
- (bool)ui_hasReadSandboxExtended;
- (bool)ui_hasSandboxExtendedForClass:(const char *)arg1;
- (bool)ui_isContentManaged;
- (bool)ui_isFileProviderURL;
- (bool)ui_isUnfulfilledPromiseURL;
- (id)ui_issueReadSandboxExtensionWithError:(id*)arg1;
- (id)ui_issueReadWriteSandboxExtensionWithError:(id*)arg1;
- (id)ui_issueSandboxExtensionOfClass:(const char *)arg1 error:(id*)arg2;
- (id)ui_resolveOnDiskBookmarkAndPromise;
- (void)ui_scheduleForCleanup;
- (void)ui_setIsContentManaged:(bool)arg1;
- (void)ui_setIsFileProviderURL:(bool)arg1;

// Image: /System/Library/PrivateFrameworks/URLFormatting.framework/URLFormatting

+ (id)_lp_URLWithData:(id)arg1 baseURL:(id)arg2;
+ (id)_lp_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;

- (id)_lp_URLByDeletingCommonIndexPageNames;
- (id)_lp_URLBySortingQueryItems;
- (id)_lp_highLevelDomain;
- (bool)_lp_isHTTPFamilyURL;
- (id)_lp_originalData;
- (id)_lp_simplifiedDisplayString;
- (id)_lp_simplifiedStringForDisplayOnly:(bool)arg1;
- (id)_lp_simplifiedURLStringForFuzzyMatching;
- (id)_lp_userVisibleString;
- (bool)_lp_userVisibleStringUsesEncodedHost;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

+ (id)_web_URLWithData:(id)arg1;
+ (id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithDataAsString:(id)arg1;
+ (id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithUserTypedString:(id)arg1;
+ (id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_uniqueWebDataURL;
+ (id)_webkit_URLWithUserTypedString:(id)arg1;
+ (id)_webkit_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;

- (id)_web_URLByRemovingUserInfo;
- (const char *)_web_URLCString;
- (id)_web_dataForURLComponentType:(long long)arg1;
- (id)_web_hostData;
- (id)_web_hostString;
- (bool)_web_isEmpty;
- (id)_web_originalData;
- (id)_web_originalDataAsString;
- (id)_web_schemeData;
- (id)_web_schemeSeparatorWithoutColon;
- (id)_web_userVisibleString;
- (id)_webkit_URLByRemovingFragment;
- (id)_webkit_URLFromURLOrSchemelessFileURL;
- (id)_webkit_canonicalize;
- (id)_webkit_canonicalize_with_wtf;
- (bool)_webkit_isFileURL;
- (bool)_webkit_isJavaScriptURL;
- (id)_webkit_scriptIfJavaScriptURL;
- (id)_webkit_suggestedFilenameWithMIMEType:(id)arg1;

// Image: /usr/lib/libprequelite.dylib

+ (id)newFromSqliteStatement:(struct sqlite3_stmt { }*)arg1 atIndex:(int)arg2;
+ (id)newFromSqliteValue:(struct sqlite3_value { }*)arg1;

- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;

@end
